{
	"id": "3eb21267f9bf4f73e47d1d81561581a4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SLD.sol": {
				"content": "// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\nimport \"contracts/stateful/Distribution.sol\";\nimport \"contracts/stateful/Staking.sol\";\n\ncontract LiquidityStakingInsurance{\n    \n}"
			},
			"contracts/stateful/Staking.sol": {
				"content": "// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\nimport \"../common/Authorization.sol\" as authorization;\nimport \"../common/Types.sol\";\n\n/// @dev The StakingI contract's address.\naddress constant STAKING_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000800;\n\n/// @dev The StakingI contract's instance.\nStakingI constant STAKING_CONTRACT = StakingI(STAKING_PRECOMPILE_ADDRESS);\n\n/// @dev Define all the available staking methods.\nstring constant MSG_DELEGATE = \"/cosmos.staking.v1beta1.MsgDelegate\";\nstring constant MSG_UNDELEGATE = \"/cosmos.staking.v1beta1.MsgUndelegate\";\nstring constant MSG_REDELEGATE = \"/cosmos.staking.v1beta1.MsgBeginRedelegate\";\nstring constant MSG_CANCEL_UNDELEGATION = \"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\";\n\n/// @dev Defines the initial commission rates to be used for creating\n/// a validator.\nstruct CommissionRates {\n    uint256 rate;\n    uint256 maxRate;\n    uint256 maxChangeRate;\n}\n\n/// @dev Defines commission parameters for a given validator.\nstruct Commission {\n    CommissionRates commissionRates;\n    uint256 updateTime;\n}\n\n\n/// @dev Represents a validator in the staking module.\nstruct Validator {\n    string operatorAddress;\n    string consensusPubkey;\n    bool jailed;\n    BondStatus status;\n    uint256 tokens;\n    uint256 delegatorShares;\n    string description;\n    int64 unbondingHeight;\n    int64 unbondingTime;\n    uint256 commission;\n    uint256 minSelfDelegation;\n}\n\nstruct RedelegationResponse {\n    Redelegation redelegation;\n    RedelegationEntryResponse[] entries;\n}\n\nstruct Redelegation {\n    RedelegationEntry[] entries;\n}\n\nstruct RedelegationEntryResponse {\n    RedelegationEntry redelegationEntry;\n    uint256 balance;\n}\n\nstruct RedelegationEntry {\n    int64 creationHeight;\n    int64 completionTime;\n    uint256 initialBalance;\n    uint256 sharesDst;\n}\n\nstruct UnbondingDelegationEntry {\n    int64 creationHeight;\n    int64 completionTime;\n    uint256 initialBalance;\n    uint256 balance;\n}\n\nstruct PageRequest {\n    bytes key;\n    uint64 offset;\n    uint64 limit;\n    bool countTotal;\n    bool reverse;\n}\n\n/// @dev The status of the validator.\nenum BondStatus {\n    Unspecified,\n    Unbonded,\n    Unbonding,\n    Bonded\n}\n\n/// @author Evmos Team\n/// @title Staking Precompiled Contract\n/// @dev The interface through which solidity contracts will interact with staking.\n/// We follow this same interface including four-byte function selectors, in the precompile that\n/// wraps the pallet.\n/// @custom:address 0x0000000000000000000000000000000000000800\ninterface StakingI is authorization.AuthorizationI {\n    /// @dev Defines a method for performing a delegation of coins from a delegator to a validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of the Coin to be delegated to the validator\n    function delegate(\n        address delegatorAddress,\n        string memory validatorAddress,\n        uint256 amount\n    ) external returns (int64 completionTime);\n\n    /// @dev Defines a method for performing an undelegation from a delegate and a validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount to be undelegated from the validator\n    /// @return completionTime The time when the undelegation is completed\n    function undelegate(\n        address delegatorAddress,\n        string memory validatorAddress,\n        uint256 amount\n    ) external returns (int64 completionTime);\n\n    /// @dev Defines a method for performing a redelegation\n    /// of coins from a delegator and source validator to a destination validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorSrcAddress The validator from which the redelegation is initiated\n    /// @param validatorDstAddress The validator to which the redelegation is destined\n    /// @param amount The amount to be redelegated to the validator\n    /// @return completionTime The time when the redelegation is completed\n    function redelegate(\n        address delegatorAddress,\n        string memory validatorSrcAddress,\n        string memory validatorDstAddress,\n        uint256 amount\n    ) external returns (int64 completionTime);\n\n    /// @dev Allows delegators to cancel the unbondingDelegation entry\n    /// and to delegate back to a previous validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of the Coin\n    /// @param creationHeight The height at which the unbonding took place\n    /// @return completionTime The time when the cancellation of the unbonding delegation is completed\n    function cancelUnbondingDelegation(\n        address delegatorAddress,\n        string memory validatorAddress,\n        uint256 amount,\n        uint256 creationHeight\n    ) external returns (int64 completionTime);\n\n    /// @dev Queries the given amount of the bond denomination to a validator.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param validatorAddress The address of the validator.\n    /// @return shares The amount of shares, that the delegator has received.\n    /// @return balance The amount in Coin, that the delegator has delegated to the given validator.\n    function delegation(\n        address delegatorAddress,\n        string memory validatorAddress\n    ) external view returns (uint256 shares, Coin calldata balance);\n\n    /// @dev Returns the delegation shares and coins, that are currently\n    /// unbonding for a given delegator and validator pair.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param validatorAddress The address of the validator.\n    /// @return entries The delegations that are currently unbonding.\n    function unbondingDelegation(\n        address delegatorAddress,\n        string memory validatorAddress\n    ) external view returns (UnbondingDelegationEntry[] calldata entries);\n\n    /// @dev Queries validator info for a given validator address.\n    /// @param validatorAddress The address of the validator.\n    /// @return validators The validator info for the given validator address.\n    function validator(\n        string memory validatorAddress\n    )\n    external view returns (\n        Validator[] calldata validators\n    );\n\n    /// @dev Queries all validators that match the given status.\n    /// @param status Enables to query for validators matching a given status.\n    /// @param pageRequest Defines an optional pagination for the request.\n    function validators(\n        string memory status,\n        PageRequest calldata pageRequest\n    ) external view returns (\n        Validator[] calldata validators,\n        PageResponse calldata pageResponse\n    );\n\n    /// @dev Queries all redelegations from a source to a destination validator for a given delegator.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\n    /// @return entries The active redelegations for the given delegator, source and destination validator combination.\n    function redelegation(\n        address delegatorAddress,\n        string memory srcValidatorAddress,\n        string memory dstValidatorAddress\n    ) external view returns (RedelegationEntry[] calldata entries);\n\n    /// @dev Queries all redelegations from a source to to a destination validator\n    /// for a given delegator in a specified pagination manner.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\n    /// @param pageRequest Defines an optional pagination for the request.\n    /// @return response Holds the redelegations for the given delegator, source and destination validator combination.\n    function redelegations(\n        address delegatorAddress,\n        string memory srcValidatorAddress,\n        string memory dstValidatorAddress,\n        PageRequest calldata pageRequest\n    ) external view returns (RedelegationResponse calldata response);\n\n    /// @dev Delegate defines an Event emitted when a given amount of tokens are delegated from the\n    /// delegator address to the validator address.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of Coin being delegated\n    /// @param newShares The new delegation shares being held\n    event Delegate(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount,\n        uint256 newShares\n    );\n\n    /// @dev Unbond defines an Event emitted when a given amount of tokens are unbonded from the\n    /// validator address to the delegator address.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of Coin being unbonded\n    /// @param completionTime The time at which the unbonding is completed\n    event Unbond(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount,\n        uint256 completionTime\n    );\n\n    /// @dev Redelegate defines an Event emitted when a given amount of tokens are redelegated from\n    /// the source validator address to the destination validator address.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorSrcAddress The address of the validator from which the delegation is retracted\n    /// @param validatorDstAddress The address of the validator to which the delegation is directed\n    /// @param amount The amount of Coin being redelegated\n    /// @param completionTime The time at which the redelegation is completed\n    event Redelegate(\n        address indexed delegatorAddress,\n        string indexed validatorSrcAddress,\n        string indexed validatorDstAddress,\n        uint256 amount,\n        uint256 completionTime\n    );\n\n    /// @dev CancelUnbondingDelegation defines an Event emitted when a given amount of tokens\n    /// that are in the process of unbonding from the validator address are bonded again.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of Coin that was in the unbonding process which is to be cancelled\n    /// @param creationHeight The block height at which the unbonding of a delegation was initiated\n    event CancelUnbondingDelegation(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount,\n        uint256 creationHeight\n    );\n}\n"
			},
			"contracts/stateful/Distribution.sol": {
				"content": "// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17 .0;\n\nimport \"../common/GenericAuthorization.sol\" as genericAuth;\nimport \"../common/Types.sol\";\n\n/// @dev The DistributionI contract's address.\naddress constant DISTRIBUTION_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000801;\n\n/// @dev Define all the available distribution methods.\nstring constant MSG_SET_WITHDRAWER_ADDRESS = \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\";\nstring constant MSG_WITHDRAW_DELEGATOR_REWARD = \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\";\nstring constant MSG_WITHDRAW_VALIDATOR_COMMISSION = \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\";\n\n/// @dev The DistributionI contract's instance.\nDistributionI constant DISTRIBUTION_CONTRACT = DistributionI(DISTRIBUTION_PRECOMPILE_ADDRESS);\n\nstruct ValidatorSlashEvent {\n    uint64 validatorPeriod;\n    Dec fraction;\n}\n\nstruct ValidatorDistributionInfo {\n    string operatorAddress;\n    DecCoin[] selfBondRewards;\n    DecCoin[] commission;\n}\n\nstruct DelegationDelegatorReward {\n    string validatorAddress;\n    DecCoin[] reward;\n}\n\n/// @author Evmos Team\n/// @title Distribution Precompile Contract\n/// @dev The interface through which solidity contracts will interact with Distribution\n/// @custom:address 0x0000000000000000000000000000000000000801\ninterface DistributionI is genericAuth.GenericAuthorizationI {\n    /// TRANSACTIONS\n    /// @dev Change the address, that can withdraw the rewards of a delegator.\n    /// Note that this address cannot be a module account.\n    /// @param delegatorAddress The address of the delegator\n    /// @param withdrawerAddress The address that will be capable of withdrawing rewards for\n    /// the given delegator address\n    function setWithdrawAddress(\n        address delegatorAddress,\n        string memory withdrawerAddress\n    ) external returns (bool success);\n\n    /// @dev Withdraw the rewards of a delegator from a validator\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @return amount The amount of Coin withdrawn\n    function withdrawDelegatorRewards(\n        address delegatorAddress,\n        string memory validatorAddress\n    )\n    external\n    returns (\n        Coin[] calldata amount\n    );\n\n    /// @dev Withdraws the rewards commission of a validator.\n    /// @param validatorAddress The address of the validator\n    /// @return amount The amount of Coin withdrawn\n    function withdrawValidatorCommission(\n        string memory validatorAddress\n    )\n    external\n    returns (\n        Coin[] calldata amount\n    );\n\n    /// QUERIES\n    /// @dev Queries validator commission and self-delegation rewards for validator.\n    /// @param validatorAddress The address of the validator\n    /// @return distributionInfo The validator's distribution info\n    function validatorDistributionInfo(\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        ValidatorDistributionInfo[] calldata distributionInfo // FIXME: remove unnecessary slice\n    );\n\n    /// @dev Queries the outstanding rewards of a validator address.\n    /// @param validatorAddress The address of the validator\n    /// @return rewards The validator's outstanding rewards\n    function validatorOutstandingRewards(\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        DecCoin[] calldata rewards\n    );\n\n    /// @dev Queries the accumulated commission for a validator.\n    /// @param validatorAddress The address of the validator\n    /// @return commission The validator's commission\n    function validatorCommission(\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        DecCoin[] calldata commission\n    );\n\n    /// @dev Queries the slashing events for a validator in a given height interval\n    /// defined by the starting and ending height.\n    /// @param validatorAddress The address of the validator\n    /// @param startingHeight The starting height\n    /// @param endingHeight The ending height\n    /// @return slashes The validator's slash events\n    /// @return pageResponse The pagination response for the query\n    function validatorSlashes(\n        string memory validatorAddress,\n        uint64 startingHeight,\n        uint64 endingHeight\n    )\n    external\n    view\n    returns (\n        ValidatorSlashEvent[] calldata slashes,\n        PageResponse calldata pageResponse\n    );\n\n    /// @dev Queries the total rewards accrued by a delegation from a specific address to a given validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @return rewards The total rewards accrued by a delegation.\n    function delegationRewards(\n        address delegatorAddress,\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        DecCoin[] calldata rewards\n    );\n\n    /// @dev Queries the total rewards accrued by each validator, that a given\n    /// address has delegated to.\n    /// @param delegatorAddress The address of the delegator\n    /// @return rewards The total rewards accrued by each validator for a delegator.\n    /// @return total The total rewards accrued by a delegator.\n    function delegationTotalRewards(\n        address delegatorAddress\n    )\n    external\n    view\n    returns (\n        DelegationDelegatorReward[] calldata rewards,\n        DecCoin[] calldata total\n    );\n\n    /// @dev Queries all validators, that a given address has delegated to.\n    /// @param delegatorAddress The address of the delegator\n    /// @return validators The addresses of all validators, that were delegated to by the given address.\n    function delegatorValidators(\n        address delegatorAddress\n    ) external view returns (string[] calldata validators);\n\n    /// @dev Queries the address capable of withdrawing rewards for a given delegator.\n    /// @param delegatorAddress The address of the delegator\n    /// @return withdrawAddress The address capable of withdrawing rewards for the delegator.\n    function delegatorWithdrawAddress(\n        address delegatorAddress\n    ) external view returns (string memory withdrawAddress);\n\n    /// @dev SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\n    /// @param caller the caller of the transaction\n    /// @param withdrawerAddress the newly set withdrawer address\n    event SetWithdrawerAddress(\n        address indexed caller,\n        string withdrawerAddress\n    );\n\n    /// @dev WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\n    /// @param delegatorAddress the address of the delegator\n    /// @param validatorAddress the address of the validator\n    /// @param amount the amount being withdrawn from the delegation\n    event WithdrawDelegatorRewards(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount\n    );\n\n    /// @dev WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\n    /// @param validatorAddress is the address of the validator\n    /// @param commission is the total commission earned by the validator\n    event WithdrawValidatorCommission(\n        string indexed validatorAddress,\n        uint256 commission\n    );\n}\n"
			},
			"contracts/common/Types.sol": {
				"content": "// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\nstruct Dec {\n    uint256 value;\n    uint8 precision;\n}\n\n/// @dev Coin is a struct that represents a token with a denomination and an amount.\nstruct Coin {\n    string denom;\n    uint256 amount;\n}\n\n/// @dev DecCoin is a struct that represents a token with a denomination, an amount and a precision.\nstruct DecCoin {\n    string denom;\n    uint256 amount;\n    uint8 precision;\n}\n\n/// @dev PageResponse is a struct that represents a page response.\nstruct PageResponse {\n    bytes nextKey;\n    uint64 total;\n}\n"
			},
			"contracts/common/Authorization.sol": {
				"content": "// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\n/// @author Evmos Team\n/// @title Authorization Interface\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\ninterface AuthorizationI {\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param amount The amount of tokens to be spent.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function approve(\n        address spender,\n        uint256 amount,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n    /// @dev Increase the allowance of a given spender by a specific amount of tokens for IBC\n    /// transfer methods or staking.\n    /// @param spender The address which will spend the funds.\n    /// @param amount The amount of tokens to be spent.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function increaseAllowance(\n        address spender,\n        uint256 amount,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n    /// @dev Decreases the allowance of a given spender by a specific amount of tokens for IBC\n    /// transfer methods or staking.\n    /// @param spender The address which will spend the funds.\n    /// @param amount The amount of tokens to be spent.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function decreaseAllowance(\n        address spender,\n        uint256 amount,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n\n    /// @dev Returns the remaining number of tokens that spender will be allowed to spend\n    /// on behalf of the owner through IBC transfer methods or staking. This is zero by default.\n    /// @param owner The address of the account owning tokens.\n    /// @param spender The address of the account able to transfer the tokens.\n    /// @param method The message type URL of the methods for which the approval should be queried.\n    /// @return remaining The remaining number of tokens available to be spent.\n    function allowance(\n        address owner,\n        address spender,\n        string calldata method\n    ) external view returns (uint256 remaining);\n\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\n    /// the approval was set.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods for which the approval is set.\n    /// @param value The amount of tokens approved to be spent.\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        string[] methods,\n        uint256 value\n    );\n\n    /// @dev This event is emitted when the allowance of a spender is changed by a call to the decrease or increase\n    /// allowance method. The values field specifies the new allowances and the methods field holds the\n    /// information for which methods the approval was set.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods for which the approval is set.\n    /// @param values The amounts of tokens approved to be spent.\n    event AllowanceChange(\n        address indexed owner,\n        address indexed spender,\n        string[] methods,\n        uint256[] values\n    );\n}\n"
			},
			"contracts/common/GenericAuthorization.sol": {
				"content": "// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\n/// @author Evmos Team\n/// @title Authorization Interface\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\ninterface GenericAuthorizationI {\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function approve(\n        address spender,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n    /// @dev Revokes a list of Cosmos transactions.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods to revoke.\n    /// @return revoked Boolean value to indicate if the revocation was successful.\n    function revoke(\n        address spender,\n        string[] calldata methods\n    ) external returns (bool revoked);\n\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\n    /// the approval was set.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods for which the approval is set.\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        string[] methods\n    );\n\n    /// @dev This event is emitted when an owner revokes a spender's allowance.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods for which the approval is set.\n    event Revocation(\n        address indexed owner,\n        address indexed spender,\n        string[] methods\n    );\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SLD.sol": {
				"LiquidityStakingInsurance": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SLD.sol\":151:193  contract LiquidityStakingInsurance{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SLD.sol\":151:193  contract LiquidityStakingInsurance{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f6887221b2c6d24d9622fa2c84b606343597330c737133c9da801386950bde7564736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220f6887221b2c6d24d9622fa2c84b606343597330c737133c9da801386950bde7564736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 DUP9 PUSH19 0x21B2C6D24D9622FA2C84B606343597330C7371 CALLER 0xC9 0xDA DUP1 SGT DUP7 SWAP6 SIGNEXTEND 0xDE PUSH22 0x64736F6C634300081300330000000000000000000000 ",
							"sourceMap": "151:42:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220f6887221b2c6d24d9622fa2c84b606343597330c737133c9da801386950bde7564736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 DUP9 PUSH19 0x21B2C6D24D9622FA2C84B606343597330C7371 CALLER 0xC9 0xDA DUP1 SGT DUP7 SWAP6 SIGNEXTEND 0xDE PUSH22 0x64736F6C634300081300330000000000000000000000 ",
							"sourceMap": "151:42:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 151,
									"end": 193,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 151,
									"end": 193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 151,
									"end": 193,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 151,
									"end": 193,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 151,
									"end": 193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 151,
									"end": 193,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 151,
									"end": 193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 151,
									"end": 193,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 151,
									"end": 193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 151,
									"end": 193,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 151,
									"end": 193,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 151,
									"end": 193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 151,
									"end": 193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 151,
									"end": 193,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 151,
									"end": 193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 151,
									"end": 193,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 151,
									"end": 193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 193,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 151,
									"end": 193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 193,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f6887221b2c6d24d9622fa2c84b606343597330c737133c9da801386950bde7564736f6c63430008130033",
									".code": [
										{
											"begin": 151,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 151,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 151,
											"end": 193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 151,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 151,
											"end": 193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 151,
											"end": 193,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/SLD.sol",
								"contracts/common/Authorization.sol",
								"contracts/common/GenericAuthorization.sol",
								"contracts/common/Types.sol",
								"contracts/stateful/Distribution.sol",
								"contracts/stateful/Staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SLD.sol\":\"LiquidityStakingInsurance\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SLD.sol\":{\"keccak256\":\"0x9a31b23814f32300c9c5e2449609c5027be5c3a0c7e42a640481ded3c5cd804c\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://44776502056f83982d5b6b7691755225198df3f792d6d9202a9b0745a2e62c89\",\"dweb:/ipfs/QmeUC6SMeFnPfiiy2xEupPEpbNepjTBz9Z7kfJZ1gcScKE\"]},\"contracts/common/Authorization.sol\":{\"keccak256\":\"0xf77a5f9eb42b7f546d2beeb49e1c120f0491620fbf1402a687ac34a275c6cb05\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://166523692d8779b98a4963ab4a9f5a9aeb4ade68803051b88816de82496ffda7\",\"dweb:/ipfs/QmYCndS9oDJ3cF7A5admkYN2SyZzBg6129DBjvYKSd8Bnv\"]},\"contracts/common/GenericAuthorization.sol\":{\"keccak256\":\"0x5560defd75b84c2d333dc68120a9d425423ff7cd0c443fcd50209f9d0e0dff88\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://a7fc6b0f9833f4757748e520f419543a1c4f5e5fd8096a3910a62897ef13a7b0\",\"dweb:/ipfs/QmQNPCcwxRLFYfUpY2aAJ4mzg4hq9bS4qL4sMBiH45E9sC\"]},\"contracts/common/Types.sol\":{\"keccak256\":\"0x2280bf7e63e011c5263d33ae3cf64673e27ee08226116a5ae289a05c026e5cc8\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://e5c63f09b85147d1343d16c828110369fea9535c1ad69d7855f1f6f04208eaa7\",\"dweb:/ipfs/QmQFbYkU3ao25UjSYDqUUP1sPEzFJqJnT2xAgfo5g2ghmA\"]},\"contracts/stateful/Distribution.sol\":{\"keccak256\":\"0x129af8b44c52e6e0299afd2df54a495854706014db407324649af3a5d0e65bdc\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://c0b4c7451e78a139a90a462cf5e89c78ca21e0a88bcab8c5d9c7f9fb266c6413\",\"dweb:/ipfs/QmVBtoPnpf97PAZqmoixFdeoJmkdC3QiAMoG98R5SwW2Z7\"]},\"contracts/stateful/Staking.sol\":{\"keccak256\":\"0x774d4bf7a848893697fa75fa11a2ec288e6df6f010f9bdd8b3c6010ef007ac67\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://459ec9fd703b368a4c7a36bb33a3bb37941f1d4c03211fa79902225ebed7117d\",\"dweb:/ipfs/QmQ5rPCr1fQyzUAuP8saGVEd7vry7tuW4ULq4EaeL1tsUv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/common/Authorization.sol": {
				"AuthorizationI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "AllowanceChange",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "method",
									"type": "string"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Evmos Team",
						"details": "The interface through which solidity contracts will interact with smart contract approvals.",
						"events": {
							"AllowanceChange(address,address,string[],uint256[])": {
								"details": "This event is emitted when the allowance of a spender is changed by a call to the decrease or increase allowance method. The values field specifies the new allowances and the methods field holds the information for which methods the approval was set.",
								"params": {
									"methods": "The message type URLs of the methods for which the approval is set.",
									"owner": "The owner of the tokens.",
									"spender": "The address which will spend the funds.",
									"values": "The amounts of tokens approved to be spent."
								}
							},
							"Approval(address,address,string[],uint256)": {
								"details": "This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.",
								"params": {
									"methods": "The message type URLs of the methods for which the approval is set.",
									"owner": "The owner of the tokens.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens approved to be spent."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address,string)": {
								"details": "Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.",
								"params": {
									"method": "The message type URL of the methods for which the approval should be queried.",
									"owner": "The address of the account owning tokens.",
									"spender": "The address of the account able to transfer the tokens."
								},
								"returns": {
									"remaining": "The remaining number of tokens available to be spent."
								}
							},
							"approve(address,uint256,string[])": {
								"details": "Approves a list of Cosmos or IBC transactions with a specific amount of tokens.",
								"params": {
									"amount": "The amount of tokens to be spent.",
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							},
							"decreaseAllowance(address,uint256,string[])": {
								"details": "Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.",
								"params": {
									"amount": "The amount of tokens to be spent.",
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							},
							"increaseAllowance(address,uint256,string[])": {
								"details": "Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.",
								"params": {
									"amount": "The amount of tokens to be spent.",
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							}
						},
						"title": "Authorization Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address,string)": "fc08930c",
							"approve(address,uint256,string[])": "b6039895",
							"decreaseAllowance(address,uint256,string[])": "f007d286",
							"increaseAllowance(address,uint256,string[])": "a386a63c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"AllowanceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"details\":\"The interface through which solidity contracts will interact with smart contract approvals.\",\"events\":{\"AllowanceChange(address,address,string[],uint256[])\":{\"details\":\"This event is emitted when the allowance of a spender is changed by a call to the decrease or increase allowance method. The values field specifies the new allowances and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\",\"values\":\"The amounts of tokens approved to be spent.\"}},\"Approval(address,address,string[],uint256)\":{\"details\":\"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens approved to be spent.\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,string)\":{\"details\":\"Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.\",\"params\":{\"method\":\"The message type URL of the methods for which the approval should be queried.\",\"owner\":\"The address of the account owning tokens.\",\"spender\":\"The address of the account able to transfer the tokens.\"},\"returns\":{\"remaining\":\"The remaining number of tokens available to be spent.\"}},\"approve(address,uint256,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"decreaseAllowance(address,uint256,string[])\":{\"details\":\"Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"increaseAllowance(address,uint256,string[])\":{\"details\":\"Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}}},\"title\":\"Authorization Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/common/Authorization.sol\":\"AuthorizationI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/common/Authorization.sol\":{\"keccak256\":\"0xf77a5f9eb42b7f546d2beeb49e1c120f0491620fbf1402a687ac34a275c6cb05\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://166523692d8779b98a4963ab4a9f5a9aeb4ade68803051b88816de82496ffda7\",\"dweb:/ipfs/QmYCndS9oDJ3cF7A5admkYN2SyZzBg6129DBjvYKSd8Bnv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/common/GenericAuthorization.sol": {
				"GenericAuthorizationI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "Revocation",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "revoke",
							"outputs": [
								{
									"internalType": "bool",
									"name": "revoked",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Evmos Team",
						"details": "The interface through which solidity contracts will interact with smart contract approvals.",
						"events": {
							"Approval(address,address,string[])": {
								"details": "This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.",
								"params": {
									"methods": "The message type URLs of the methods for which the approval is set.",
									"owner": "The owner of the tokens.",
									"spender": "The address which will spend the funds."
								}
							},
							"Revocation(address,address,string[])": {
								"details": "This event is emitted when an owner revokes a spender's allowance.",
								"params": {
									"methods": "The message type URLs of the methods for which the approval is set.",
									"owner": "The owner of the tokens.",
									"spender": "The address which will spend the funds."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,string[])": {
								"details": "Approves a list of Cosmos or IBC transactions with a specific amount of tokens.",
								"params": {
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							},
							"revoke(address,string[])": {
								"details": "Revokes a list of Cosmos transactions.",
								"params": {
									"methods": "The message type URLs of the methods to revoke.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"revoked": "Boolean value to indicate if the revocation was successful."
								}
							}
						},
						"title": "Authorization Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,string[])": "7a9841ed",
							"revoke(address,string[])": "61dc5c3b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"Revocation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"details\":\"The interface through which solidity contracts will interact with smart contract approvals.\",\"events\":{\"Approval(address,address,string[])\":{\"details\":\"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\"}},\"Revocation(address,address,string[])\":{\"details\":\"This event is emitted when an owner revokes a spender's allowance.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"revoke(address,string[])\":{\"details\":\"Revokes a list of Cosmos transactions.\",\"params\":{\"methods\":\"The message type URLs of the methods to revoke.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"revoked\":\"Boolean value to indicate if the revocation was successful.\"}}},\"title\":\"Authorization Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/common/GenericAuthorization.sol\":\"GenericAuthorizationI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/common/GenericAuthorization.sol\":{\"keccak256\":\"0x5560defd75b84c2d333dc68120a9d425423ff7cd0c443fcd50209f9d0e0dff88\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://a7fc6b0f9833f4757748e520f419543a1c4f5e5fd8096a3910a62897ef13a7b0\",\"dweb:/ipfs/QmQNPCcwxRLFYfUpY2aAJ4mzg4hq9bS4qL4sMBiH45E9sC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/stateful/Distribution.sol": {
				"DistributionI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "Revocation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "withdrawerAddress",
									"type": "string"
								}
							],
							"name": "SetWithdrawerAddress",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawDelegatorRewards",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "commission",
									"type": "uint256"
								}
							],
							"name": "WithdrawValidatorCommission",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "delegationRewards",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "denom",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "precision",
											"type": "uint8"
										}
									],
									"internalType": "struct DecCoin[]",
									"name": "rewards",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								}
							],
							"name": "delegationTotalRewards",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "validatorAddress",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "denom",
													"type": "string"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint8",
													"name": "precision",
													"type": "uint8"
												}
											],
											"internalType": "struct DecCoin[]",
											"name": "reward",
											"type": "tuple[]"
										}
									],
									"internalType": "struct DelegationDelegatorReward[]",
									"name": "rewards",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "denom",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "precision",
											"type": "uint8"
										}
									],
									"internalType": "struct DecCoin[]",
									"name": "total",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								}
							],
							"name": "delegatorValidators",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "validators",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								}
							],
							"name": "delegatorWithdrawAddress",
							"outputs": [
								{
									"internalType": "string",
									"name": "withdrawAddress",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "revoke",
							"outputs": [
								{
									"internalType": "bool",
									"name": "revoked",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "withdrawerAddress",
									"type": "string"
								}
							],
							"name": "setWithdrawAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "validatorCommission",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "denom",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "precision",
											"type": "uint8"
										}
									],
									"internalType": "struct DecCoin[]",
									"name": "commission",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "validatorDistributionInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "operatorAddress",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "denom",
													"type": "string"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint8",
													"name": "precision",
													"type": "uint8"
												}
											],
											"internalType": "struct DecCoin[]",
											"name": "selfBondRewards",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "denom",
													"type": "string"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint8",
													"name": "precision",
													"type": "uint8"
												}
											],
											"internalType": "struct DecCoin[]",
											"name": "commission",
											"type": "tuple[]"
										}
									],
									"internalType": "struct ValidatorDistributionInfo[]",
									"name": "distributionInfo",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "validatorOutstandingRewards",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "denom",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "precision",
											"type": "uint8"
										}
									],
									"internalType": "struct DecCoin[]",
									"name": "rewards",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"internalType": "uint64",
									"name": "startingHeight",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "endingHeight",
									"type": "uint64"
								}
							],
							"name": "validatorSlashes",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint64",
											"name": "validatorPeriod",
											"type": "uint64"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "value",
													"type": "uint256"
												},
												{
													"internalType": "uint8",
													"name": "precision",
													"type": "uint8"
												}
											],
											"internalType": "struct Dec",
											"name": "fraction",
											"type": "tuple"
										}
									],
									"internalType": "struct ValidatorSlashEvent[]",
									"name": "slashes",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "nextKey",
											"type": "bytes"
										},
										{
											"internalType": "uint64",
											"name": "total",
											"type": "uint64"
										}
									],
									"internalType": "struct PageResponse",
									"name": "pageResponse",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "withdrawDelegatorRewards",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "denom",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct Coin[]",
									"name": "amount",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "withdrawValidatorCommission",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "denom",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct Coin[]",
									"name": "amount",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Evmos Team",
						"custom:address": "0x0000000000000000000000000000000000000801",
						"details": "The interface through which solidity contracts will interact with Distribution",
						"events": {
							"Approval(address,address,string[])": {
								"details": "This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.",
								"params": {
									"methods": "The message type URLs of the methods for which the approval is set.",
									"owner": "The owner of the tokens.",
									"spender": "The address which will spend the funds."
								}
							},
							"Revocation(address,address,string[])": {
								"details": "This event is emitted when an owner revokes a spender's allowance.",
								"params": {
									"methods": "The message type URLs of the methods for which the approval is set.",
									"owner": "The owner of the tokens.",
									"spender": "The address which will spend the funds."
								}
							},
							"SetWithdrawerAddress(address,string)": {
								"details": "SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set",
								"params": {
									"caller": "the caller of the transaction",
									"withdrawerAddress": "the newly set withdrawer address"
								}
							},
							"WithdrawDelegatorRewards(address,string,uint256)": {
								"details": "WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn",
								"params": {
									"amount": "the amount being withdrawn from the delegation",
									"delegatorAddress": "the address of the delegator",
									"validatorAddress": "the address of the validator"
								}
							},
							"WithdrawValidatorCommission(string,uint256)": {
								"details": "WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn",
								"params": {
									"commission": "is the total commission earned by the validator",
									"validatorAddress": "is the address of the validator"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,string[])": {
								"details": "Approves a list of Cosmos or IBC transactions with a specific amount of tokens.",
								"params": {
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							},
							"delegationRewards(address,string)": {
								"details": "Queries the total rewards accrued by a delegation from a specific address to a given validator.",
								"params": {
									"delegatorAddress": "The address of the delegator",
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"rewards": "The total rewards accrued by a delegation."
								}
							},
							"delegationTotalRewards(address)": {
								"details": "Queries the total rewards accrued by each validator, that a given address has delegated to.",
								"params": {
									"delegatorAddress": "The address of the delegator"
								},
								"returns": {
									"rewards": "The total rewards accrued by each validator for a delegator.",
									"total": "The total rewards accrued by a delegator."
								}
							},
							"delegatorValidators(address)": {
								"details": "Queries all validators, that a given address has delegated to.",
								"params": {
									"delegatorAddress": "The address of the delegator"
								},
								"returns": {
									"validators": "The addresses of all validators, that were delegated to by the given address."
								}
							},
							"delegatorWithdrawAddress(address)": {
								"details": "Queries the address capable of withdrawing rewards for a given delegator.",
								"params": {
									"delegatorAddress": "The address of the delegator"
								},
								"returns": {
									"withdrawAddress": "The address capable of withdrawing rewards for the delegator."
								}
							},
							"revoke(address,string[])": {
								"details": "Revokes a list of Cosmos transactions.",
								"params": {
									"methods": "The message type URLs of the methods to revoke.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"revoked": "Boolean value to indicate if the revocation was successful."
								}
							},
							"setWithdrawAddress(address,string)": {
								"details": "Change the address, that can withdraw the rewards of a delegator. Note that this address cannot be a module account.",
								"params": {
									"delegatorAddress": "The address of the delegator",
									"withdrawerAddress": "The address that will be capable of withdrawing rewards for the given delegator address"
								}
							},
							"validatorCommission(string)": {
								"details": "Queries the accumulated commission for a validator.",
								"params": {
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"commission": "The validator's commission"
								}
							},
							"validatorDistributionInfo(string)": {
								"details": "Queries validator commission and self-delegation rewards for validator.",
								"params": {
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"distributionInfo": "The validator's distribution info"
								}
							},
							"validatorOutstandingRewards(string)": {
								"details": "Queries the outstanding rewards of a validator address.",
								"params": {
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"rewards": "The validator's outstanding rewards"
								}
							},
							"validatorSlashes(string,uint64,uint64)": {
								"details": "Queries the slashing events for a validator in a given height interval defined by the starting and ending height.",
								"params": {
									"endingHeight": "The ending height",
									"startingHeight": "The starting height",
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"pageResponse": "The pagination response for the query",
									"slashes": "The validator's slash events"
								}
							},
							"withdrawDelegatorRewards(address,string)": {
								"details": "Withdraw the rewards of a delegator from a validator",
								"params": {
									"delegatorAddress": "The address of the delegator",
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"amount": "The amount of Coin withdrawn"
								}
							},
							"withdrawValidatorCommission(string)": {
								"details": "Withdraws the rewards commission of a validator.",
								"params": {
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"amount": "The amount of Coin withdrawn"
								}
							}
						},
						"title": "Distribution Precompile Contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,string[])": "7a9841ed",
							"delegationRewards(address,string)": "9ad563b4",
							"delegationTotalRewards(address)": "54be1a28",
							"delegatorValidators(address)": "a66cb605",
							"delegatorWithdrawAddress(address)": "5431f450",
							"revoke(address,string[])": "61dc5c3b",
							"setWithdrawAddress(address,string)": "5a9d9a96",
							"validatorCommission(string)": "3dd40f78",
							"validatorDistributionInfo(string)": "54212a89",
							"validatorOutstandingRewards(string)": "85b2d2da",
							"validatorSlashes(string,uint64,uint64)": "a75395a5",
							"withdrawDelegatorRewards(address,string)": "b46a8d61",
							"withdrawValidatorCommission(string)": "3ce4e3be"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"Revocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"withdrawerAddress\",\"type\":\"string\"}],\"name\":\"SetWithdrawerAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawDelegatorRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"}],\"name\":\"WithdrawValidatorCommission\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"delegationRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"}],\"name\":\"delegationTotalRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"reward\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DelegationDelegatorReward[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"total\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"}],\"name\":\"delegatorValidators\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"validators\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"}],\"name\":\"delegatorWithdrawAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"withdrawAddress\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"withdrawerAddress\",\"type\":\"string\"}],\"name\":\"setWithdrawAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validatorCommission\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"commission\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validatorDistributionInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"operatorAddress\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"selfBondRewards\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"commission\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ValidatorDistributionInfo[]\",\"name\":\"distributionInfo\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validatorOutstandingRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"startingHeight\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endingHeight\",\"type\":\"uint64\"}],\"name\":\"validatorSlashes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"validatorPeriod\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct Dec\",\"name\":\"fraction\",\"type\":\"tuple\"}],\"internalType\":\"struct ValidatorSlashEvent[]\",\"name\":\"slashes\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"nextKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"total\",\"type\":\"uint64\"}],\"internalType\":\"struct PageResponse\",\"name\":\"pageResponse\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"withdrawDelegatorRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Coin[]\",\"name\":\"amount\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"withdrawValidatorCommission\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Coin[]\",\"name\":\"amount\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"custom:address\":\"0x0000000000000000000000000000000000000801\",\"details\":\"The interface through which solidity contracts will interact with Distribution\",\"events\":{\"Approval(address,address,string[])\":{\"details\":\"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\"}},\"Revocation(address,address,string[])\":{\"details\":\"This event is emitted when an owner revokes a spender's allowance.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\"}},\"SetWithdrawerAddress(address,string)\":{\"details\":\"SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\",\"params\":{\"caller\":\"the caller of the transaction\",\"withdrawerAddress\":\"the newly set withdrawer address\"}},\"WithdrawDelegatorRewards(address,string,uint256)\":{\"details\":\"WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\",\"params\":{\"amount\":\"the amount being withdrawn from the delegation\",\"delegatorAddress\":\"the address of the delegator\",\"validatorAddress\":\"the address of the validator\"}},\"WithdrawValidatorCommission(string,uint256)\":{\"details\":\"WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\",\"params\":{\"commission\":\"is the total commission earned by the validator\",\"validatorAddress\":\"is the address of the validator\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"delegationRewards(address,string)\":{\"details\":\"Queries the total rewards accrued by a delegation from a specific address to a given validator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"rewards\":\"The total rewards accrued by a delegation.\"}},\"delegationTotalRewards(address)\":{\"details\":\"Queries the total rewards accrued by each validator, that a given address has delegated to.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\"},\"returns\":{\"rewards\":\"The total rewards accrued by each validator for a delegator.\",\"total\":\"The total rewards accrued by a delegator.\"}},\"delegatorValidators(address)\":{\"details\":\"Queries all validators, that a given address has delegated to.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\"},\"returns\":{\"validators\":\"The addresses of all validators, that were delegated to by the given address.\"}},\"delegatorWithdrawAddress(address)\":{\"details\":\"Queries the address capable of withdrawing rewards for a given delegator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\"},\"returns\":{\"withdrawAddress\":\"The address capable of withdrawing rewards for the delegator.\"}},\"revoke(address,string[])\":{\"details\":\"Revokes a list of Cosmos transactions.\",\"params\":{\"methods\":\"The message type URLs of the methods to revoke.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"revoked\":\"Boolean value to indicate if the revocation was successful.\"}},\"setWithdrawAddress(address,string)\":{\"details\":\"Change the address, that can withdraw the rewards of a delegator. Note that this address cannot be a module account.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\",\"withdrawerAddress\":\"The address that will be capable of withdrawing rewards for the given delegator address\"}},\"validatorCommission(string)\":{\"details\":\"Queries the accumulated commission for a validator.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"commission\":\"The validator's commission\"}},\"validatorDistributionInfo(string)\":{\"details\":\"Queries validator commission and self-delegation rewards for validator.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"distributionInfo\":\"The validator's distribution info\"}},\"validatorOutstandingRewards(string)\":{\"details\":\"Queries the outstanding rewards of a validator address.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"rewards\":\"The validator's outstanding rewards\"}},\"validatorSlashes(string,uint64,uint64)\":{\"details\":\"Queries the slashing events for a validator in a given height interval defined by the starting and ending height.\",\"params\":{\"endingHeight\":\"The ending height\",\"startingHeight\":\"The starting height\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"pageResponse\":\"The pagination response for the query\",\"slashes\":\"The validator's slash events\"}},\"withdrawDelegatorRewards(address,string)\":{\"details\":\"Withdraw the rewards of a delegator from a validator\",\"params\":{\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"amount\":\"The amount of Coin withdrawn\"}},\"withdrawValidatorCommission(string)\":{\"details\":\"Withdraws the rewards commission of a validator.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"amount\":\"The amount of Coin withdrawn\"}}},\"title\":\"Distribution Precompile Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setWithdrawAddress(address,string)\":{\"notice\":\"TRANSACTIONS\"},\"validatorDistributionInfo(string)\":{\"notice\":\"QUERIES\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/stateful/Distribution.sol\":\"DistributionI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/common/GenericAuthorization.sol\":{\"keccak256\":\"0x5560defd75b84c2d333dc68120a9d425423ff7cd0c443fcd50209f9d0e0dff88\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://a7fc6b0f9833f4757748e520f419543a1c4f5e5fd8096a3910a62897ef13a7b0\",\"dweb:/ipfs/QmQNPCcwxRLFYfUpY2aAJ4mzg4hq9bS4qL4sMBiH45E9sC\"]},\"contracts/common/Types.sol\":{\"keccak256\":\"0x2280bf7e63e011c5263d33ae3cf64673e27ee08226116a5ae289a05c026e5cc8\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://e5c63f09b85147d1343d16c828110369fea9535c1ad69d7855f1f6f04208eaa7\",\"dweb:/ipfs/QmQFbYkU3ao25UjSYDqUUP1sPEzFJqJnT2xAgfo5g2ghmA\"]},\"contracts/stateful/Distribution.sol\":{\"keccak256\":\"0x129af8b44c52e6e0299afd2df54a495854706014db407324649af3a5d0e65bdc\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://c0b4c7451e78a139a90a462cf5e89c78ca21e0a88bcab8c5d9c7f9fb266c6413\",\"dweb:/ipfs/QmVBtoPnpf97PAZqmoixFdeoJmkdC3QiAMoG98R5SwW2Z7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setWithdrawAddress(address,string)": {
								"notice": "TRANSACTIONS"
							},
							"validatorDistributionInfo(string)": {
								"notice": "QUERIES"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/stateful/Staking.sol": {
				"StakingI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "AllowanceChange",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "creationHeight",
									"type": "uint256"
								}
							],
							"name": "CancelUnbondingDelegation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newShares",
									"type": "uint256"
								}
							],
							"name": "Delegate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "validatorSrcAddress",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "validatorDstAddress",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "completionTime",
									"type": "uint256"
								}
							],
							"name": "Redelegate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "completionTime",
									"type": "uint256"
								}
							],
							"name": "Unbond",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "method",
									"type": "string"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "creationHeight",
									"type": "uint256"
								}
							],
							"name": "cancelUnbondingDelegation",
							"outputs": [
								{
									"internalType": "int64",
									"name": "completionTime",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "delegate",
							"outputs": [
								{
									"internalType": "int64",
									"name": "completionTime",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "delegation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "denom",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct Coin",
									"name": "balance",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorSrcAddress",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "validatorDstAddress",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "redelegate",
							"outputs": [
								{
									"internalType": "int64",
									"name": "completionTime",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "srcValidatorAddress",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "dstValidatorAddress",
									"type": "string"
								}
							],
							"name": "redelegation",
							"outputs": [
								{
									"components": [
										{
											"internalType": "int64",
											"name": "creationHeight",
											"type": "int64"
										},
										{
											"internalType": "int64",
											"name": "completionTime",
											"type": "int64"
										},
										{
											"internalType": "uint256",
											"name": "initialBalance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "sharesDst",
											"type": "uint256"
										}
									],
									"internalType": "struct RedelegationEntry[]",
									"name": "entries",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "srcValidatorAddress",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "dstValidatorAddress",
									"type": "string"
								},
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "key",
											"type": "bytes"
										},
										{
											"internalType": "uint64",
											"name": "offset",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "limit",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "countTotal",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "reverse",
											"type": "bool"
										}
									],
									"internalType": "struct PageRequest",
									"name": "pageRequest",
									"type": "tuple"
								}
							],
							"name": "redelegations",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"components": [
														{
															"internalType": "int64",
															"name": "creationHeight",
															"type": "int64"
														},
														{
															"internalType": "int64",
															"name": "completionTime",
															"type": "int64"
														},
														{
															"internalType": "uint256",
															"name": "initialBalance",
															"type": "uint256"
														},
														{
															"internalType": "uint256",
															"name": "sharesDst",
															"type": "uint256"
														}
													],
													"internalType": "struct RedelegationEntry[]",
													"name": "entries",
													"type": "tuple[]"
												}
											],
											"internalType": "struct Redelegation",
											"name": "redelegation",
											"type": "tuple"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "int64",
															"name": "creationHeight",
															"type": "int64"
														},
														{
															"internalType": "int64",
															"name": "completionTime",
															"type": "int64"
														},
														{
															"internalType": "uint256",
															"name": "initialBalance",
															"type": "uint256"
														},
														{
															"internalType": "uint256",
															"name": "sharesDst",
															"type": "uint256"
														}
													],
													"internalType": "struct RedelegationEntry",
													"name": "redelegationEntry",
													"type": "tuple"
												},
												{
													"internalType": "uint256",
													"name": "balance",
													"type": "uint256"
												}
											],
											"internalType": "struct RedelegationEntryResponse[]",
											"name": "entries",
											"type": "tuple[]"
										}
									],
									"internalType": "struct RedelegationResponse",
									"name": "response",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "unbondingDelegation",
							"outputs": [
								{
									"components": [
										{
											"internalType": "int64",
											"name": "creationHeight",
											"type": "int64"
										},
										{
											"internalType": "int64",
											"name": "completionTime",
											"type": "int64"
										},
										{
											"internalType": "uint256",
											"name": "initialBalance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										}
									],
									"internalType": "struct UnbondingDelegationEntry[]",
									"name": "entries",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "undelegate",
							"outputs": [
								{
									"internalType": "int64",
									"name": "completionTime",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "validator",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "operatorAddress",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "consensusPubkey",
											"type": "string"
										},
										{
											"internalType": "bool",
											"name": "jailed",
											"type": "bool"
										},
										{
											"internalType": "enum BondStatus",
											"name": "status",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "tokens",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "delegatorShares",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "int64",
											"name": "unbondingHeight",
											"type": "int64"
										},
										{
											"internalType": "int64",
											"name": "unbondingTime",
											"type": "int64"
										},
										{
											"internalType": "uint256",
											"name": "commission",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minSelfDelegation",
											"type": "uint256"
										}
									],
									"internalType": "struct Validator[]",
									"name": "validators",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "status",
									"type": "string"
								},
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "key",
											"type": "bytes"
										},
										{
											"internalType": "uint64",
											"name": "offset",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "limit",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "countTotal",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "reverse",
											"type": "bool"
										}
									],
									"internalType": "struct PageRequest",
									"name": "pageRequest",
									"type": "tuple"
								}
							],
							"name": "validators",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "operatorAddress",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "consensusPubkey",
											"type": "string"
										},
										{
											"internalType": "bool",
											"name": "jailed",
											"type": "bool"
										},
										{
											"internalType": "enum BondStatus",
											"name": "status",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "tokens",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "delegatorShares",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "int64",
											"name": "unbondingHeight",
											"type": "int64"
										},
										{
											"internalType": "int64",
											"name": "unbondingTime",
											"type": "int64"
										},
										{
											"internalType": "uint256",
											"name": "commission",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minSelfDelegation",
											"type": "uint256"
										}
									],
									"internalType": "struct Validator[]",
									"name": "validators",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "nextKey",
											"type": "bytes"
										},
										{
											"internalType": "uint64",
											"name": "total",
											"type": "uint64"
										}
									],
									"internalType": "struct PageResponse",
									"name": "pageResponse",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Evmos Team",
						"custom:address": "0x0000000000000000000000000000000000000800",
						"details": "The interface through which solidity contracts will interact with staking. We follow this same interface including four-byte function selectors, in the precompile that wraps the pallet.",
						"events": {
							"AllowanceChange(address,address,string[],uint256[])": {
								"details": "This event is emitted when the allowance of a spender is changed by a call to the decrease or increase allowance method. The values field specifies the new allowances and the methods field holds the information for which methods the approval was set.",
								"params": {
									"methods": "The message type URLs of the methods for which the approval is set.",
									"owner": "The owner of the tokens.",
									"spender": "The address which will spend the funds.",
									"values": "The amounts of tokens approved to be spent."
								}
							},
							"Approval(address,address,string[],uint256)": {
								"details": "This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.",
								"params": {
									"methods": "The message type URLs of the methods for which the approval is set.",
									"owner": "The owner of the tokens.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens approved to be spent."
								}
							},
							"CancelUnbondingDelegation(address,string,uint256,uint256)": {
								"details": "CancelUnbondingDelegation defines an Event emitted when a given amount of tokens that are in the process of unbonding from the validator address are bonded again.",
								"params": {
									"amount": "The amount of Coin that was in the unbonding process which is to be cancelled",
									"creationHeight": "The block height at which the unbonding of a delegation was initiated",
									"delegatorAddress": "The address of the delegator",
									"validatorAddress": "The address of the validator"
								}
							},
							"Delegate(address,string,uint256,uint256)": {
								"details": "Delegate defines an Event emitted when a given amount of tokens are delegated from the delegator address to the validator address.",
								"params": {
									"amount": "The amount of Coin being delegated",
									"delegatorAddress": "The address of the delegator",
									"newShares": "The new delegation shares being held",
									"validatorAddress": "The address of the validator"
								}
							},
							"Redelegate(address,string,string,uint256,uint256)": {
								"details": "Redelegate defines an Event emitted when a given amount of tokens are redelegated from the source validator address to the destination validator address.",
								"params": {
									"amount": "The amount of Coin being redelegated",
									"completionTime": "The time at which the redelegation is completed",
									"delegatorAddress": "The address of the delegator",
									"validatorDstAddress": "The address of the validator to which the delegation is directed",
									"validatorSrcAddress": "The address of the validator from which the delegation is retracted"
								}
							},
							"Unbond(address,string,uint256,uint256)": {
								"details": "Unbond defines an Event emitted when a given amount of tokens are unbonded from the validator address to the delegator address.",
								"params": {
									"amount": "The amount of Coin being unbonded",
									"completionTime": "The time at which the unbonding is completed",
									"delegatorAddress": "The address of the delegator",
									"validatorAddress": "The address of the validator"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address,string)": {
								"details": "Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.",
								"params": {
									"method": "The message type URL of the methods for which the approval should be queried.",
									"owner": "The address of the account owning tokens.",
									"spender": "The address of the account able to transfer the tokens."
								},
								"returns": {
									"remaining": "The remaining number of tokens available to be spent."
								}
							},
							"approve(address,uint256,string[])": {
								"details": "Approves a list of Cosmos or IBC transactions with a specific amount of tokens.",
								"params": {
									"amount": "The amount of tokens to be spent.",
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							},
							"cancelUnbondingDelegation(address,string,uint256,uint256)": {
								"details": "Allows delegators to cancel the unbondingDelegation entry and to delegate back to a previous validator.",
								"params": {
									"amount": "The amount of the Coin",
									"creationHeight": "The height at which the unbonding took place",
									"delegatorAddress": "The address of the delegator",
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"completionTime": "The time when the cancellation of the unbonding delegation is completed"
								}
							},
							"decreaseAllowance(address,uint256,string[])": {
								"details": "Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.",
								"params": {
									"amount": "The amount of tokens to be spent.",
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							},
							"delegate(address,string,uint256)": {
								"details": "Defines a method for performing a delegation of coins from a delegator to a validator.",
								"params": {
									"amount": "The amount of the Coin to be delegated to the validator",
									"delegatorAddress": "The address of the delegator",
									"validatorAddress": "The address of the validator"
								}
							},
							"delegation(address,string)": {
								"details": "Queries the given amount of the bond denomination to a validator.",
								"params": {
									"delegatorAddress": "The address of the delegator.",
									"validatorAddress": "The address of the validator."
								},
								"returns": {
									"balance": "The amount in Coin, that the delegator has delegated to the given validator.",
									"shares": "The amount of shares, that the delegator has received."
								}
							},
							"increaseAllowance(address,uint256,string[])": {
								"details": "Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.",
								"params": {
									"amount": "The amount of tokens to be spent.",
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							},
							"redelegate(address,string,string,uint256)": {
								"details": "Defines a method for performing a redelegation of coins from a delegator and source validator to a destination validator.",
								"params": {
									"amount": "The amount to be redelegated to the validator",
									"delegatorAddress": "The address of the delegator",
									"validatorDstAddress": "The validator to which the redelegation is destined",
									"validatorSrcAddress": "The validator from which the redelegation is initiated"
								},
								"returns": {
									"completionTime": "The time when the redelegation is completed"
								}
							},
							"redelegation(address,string,string)": {
								"details": "Queries all redelegations from a source to a destination validator for a given delegator.",
								"params": {
									"delegatorAddress": "The address of the delegator.",
									"dstValidatorAddress": "Defines the validator address to redelegate to.",
									"srcValidatorAddress": "Defines the validator address to redelegate from."
								},
								"returns": {
									"entries": "The active redelegations for the given delegator, source and destination validator combination."
								}
							},
							"redelegations(address,string,string,(bytes,uint64,uint64,bool,bool))": {
								"details": "Queries all redelegations from a source to to a destination validator for a given delegator in a specified pagination manner.",
								"params": {
									"delegatorAddress": "The address of the delegator.",
									"dstValidatorAddress": "Defines the validator address to redelegate to.",
									"pageRequest": "Defines an optional pagination for the request.",
									"srcValidatorAddress": "Defines the validator address to redelegate from."
								},
								"returns": {
									"response": "Holds the redelegations for the given delegator, source and destination validator combination."
								}
							},
							"unbondingDelegation(address,string)": {
								"details": "Returns the delegation shares and coins, that are currently unbonding for a given delegator and validator pair.",
								"params": {
									"delegatorAddress": "The address of the delegator.",
									"validatorAddress": "The address of the validator."
								},
								"returns": {
									"entries": "The delegations that are currently unbonding."
								}
							},
							"undelegate(address,string,uint256)": {
								"details": "Defines a method for performing an undelegation from a delegate and a validator.",
								"params": {
									"amount": "The amount to be undelegated from the validator",
									"delegatorAddress": "The address of the delegator",
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"completionTime": "The time when the undelegation is completed"
								}
							},
							"validator(string)": {
								"details": "Queries validator info for a given validator address.",
								"params": {
									"validatorAddress": "The address of the validator."
								},
								"returns": {
									"validators": "The validator info for the given validator address."
								}
							},
							"validators(string,(bytes,uint64,uint64,bool,bool))": {
								"details": "Queries all validators that match the given status.",
								"params": {
									"pageRequest": "Defines an optional pagination for the request.",
									"status": "Enables to query for validators matching a given status."
								}
							}
						},
						"title": "Staking Precompiled Contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address,string)": "fc08930c",
							"approve(address,uint256,string[])": "b6039895",
							"cancelUnbondingDelegation(address,string,uint256,uint256)": "12d58dfe",
							"decreaseAllowance(address,uint256,string[])": "f007d286",
							"delegate(address,string,uint256)": "53266bbb",
							"delegation(address,string)": "241774e6",
							"increaseAllowance(address,uint256,string[])": "a386a63c",
							"redelegate(address,string,string,uint256)": "54b826f5",
							"redelegation(address,string,string)": "7d9f939c",
							"redelegations(address,string,string,(bytes,uint64,uint64,bool,bool))": "10a2851c",
							"unbondingDelegation(address,string)": "a03ffee1",
							"undelegate(address,string,uint256)": "3edab33c",
							"validator(string)": "0bc82a17",
							"validators(string,(bytes,uint64,uint64,bool,bool))": "186b2167"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"AllowanceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creationHeight\",\"type\":\"uint256\"}],\"name\":\"CancelUnbondingDelegation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newShares\",\"type\":\"uint256\"}],\"name\":\"Delegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorSrcAddress\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorDstAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"completionTime\",\"type\":\"uint256\"}],\"name\":\"Redelegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"completionTime\",\"type\":\"uint256\"}],\"name\":\"Unbond\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationHeight\",\"type\":\"uint256\"}],\"name\":\"cancelUnbondingDelegation\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"delegate\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Coin\",\"name\":\"balance\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorSrcAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"validatorDstAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redelegate\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"srcValidatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dstValidatorAddress\",\"type\":\"string\"}],\"name\":\"redelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesDst\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"srcValidatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dstValidatorAddress\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"limit\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"countTotal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"internalType\":\"struct PageRequest\",\"name\":\"pageRequest\",\"type\":\"tuple\"}],\"name\":\"redelegations\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesDst\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Redelegation\",\"name\":\"redelegation\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesDst\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntry\",\"name\":\"redelegationEntry\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntryResponse[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"internalType\":\"struct RedelegationResponse\",\"name\":\"response\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"unbondingDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct UnbondingDelegationEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"undelegate\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validator\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"operatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consensusPubkey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"jailed\",\"type\":\"bool\"},{\"internalType\":\"enum BondStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatorShares\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"int64\",\"name\":\"unbondingHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"unbondingTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSelfDelegation\",\"type\":\"uint256\"}],\"internalType\":\"struct Validator[]\",\"name\":\"validators\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"status\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"limit\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"countTotal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"internalType\":\"struct PageRequest\",\"name\":\"pageRequest\",\"type\":\"tuple\"}],\"name\":\"validators\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"operatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consensusPubkey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"jailed\",\"type\":\"bool\"},{\"internalType\":\"enum BondStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatorShares\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"int64\",\"name\":\"unbondingHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"unbondingTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSelfDelegation\",\"type\":\"uint256\"}],\"internalType\":\"struct Validator[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"nextKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"total\",\"type\":\"uint64\"}],\"internalType\":\"struct PageResponse\",\"name\":\"pageResponse\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"custom:address\":\"0x0000000000000000000000000000000000000800\",\"details\":\"The interface through which solidity contracts will interact with staking. We follow this same interface including four-byte function selectors, in the precompile that wraps the pallet.\",\"events\":{\"AllowanceChange(address,address,string[],uint256[])\":{\"details\":\"This event is emitted when the allowance of a spender is changed by a call to the decrease or increase allowance method. The values field specifies the new allowances and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\",\"values\":\"The amounts of tokens approved to be spent.\"}},\"Approval(address,address,string[],uint256)\":{\"details\":\"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens approved to be spent.\"}},\"CancelUnbondingDelegation(address,string,uint256,uint256)\":{\"details\":\"CancelUnbondingDelegation defines an Event emitted when a given amount of tokens that are in the process of unbonding from the validator address are bonded again.\",\"params\":{\"amount\":\"The amount of Coin that was in the unbonding process which is to be cancelled\",\"creationHeight\":\"The block height at which the unbonding of a delegation was initiated\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"}},\"Delegate(address,string,uint256,uint256)\":{\"details\":\"Delegate defines an Event emitted when a given amount of tokens are delegated from the delegator address to the validator address.\",\"params\":{\"amount\":\"The amount of Coin being delegated\",\"delegatorAddress\":\"The address of the delegator\",\"newShares\":\"The new delegation shares being held\",\"validatorAddress\":\"The address of the validator\"}},\"Redelegate(address,string,string,uint256,uint256)\":{\"details\":\"Redelegate defines an Event emitted when a given amount of tokens are redelegated from the source validator address to the destination validator address.\",\"params\":{\"amount\":\"The amount of Coin being redelegated\",\"completionTime\":\"The time at which the redelegation is completed\",\"delegatorAddress\":\"The address of the delegator\",\"validatorDstAddress\":\"The address of the validator to which the delegation is directed\",\"validatorSrcAddress\":\"The address of the validator from which the delegation is retracted\"}},\"Unbond(address,string,uint256,uint256)\":{\"details\":\"Unbond defines an Event emitted when a given amount of tokens are unbonded from the validator address to the delegator address.\",\"params\":{\"amount\":\"The amount of Coin being unbonded\",\"completionTime\":\"The time at which the unbonding is completed\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,string)\":{\"details\":\"Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.\",\"params\":{\"method\":\"The message type URL of the methods for which the approval should be queried.\",\"owner\":\"The address of the account owning tokens.\",\"spender\":\"The address of the account able to transfer the tokens.\"},\"returns\":{\"remaining\":\"The remaining number of tokens available to be spent.\"}},\"approve(address,uint256,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"cancelUnbondingDelegation(address,string,uint256,uint256)\":{\"details\":\"Allows delegators to cancel the unbondingDelegation entry and to delegate back to a previous validator.\",\"params\":{\"amount\":\"The amount of the Coin\",\"creationHeight\":\"The height at which the unbonding took place\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"completionTime\":\"The time when the cancellation of the unbonding delegation is completed\"}},\"decreaseAllowance(address,uint256,string[])\":{\"details\":\"Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"delegate(address,string,uint256)\":{\"details\":\"Defines a method for performing a delegation of coins from a delegator to a validator.\",\"params\":{\"amount\":\"The amount of the Coin to be delegated to the validator\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"}},\"delegation(address,string)\":{\"details\":\"Queries the given amount of the bond denomination to a validator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"validatorAddress\":\"The address of the validator.\"},\"returns\":{\"balance\":\"The amount in Coin, that the delegator has delegated to the given validator.\",\"shares\":\"The amount of shares, that the delegator has received.\"}},\"increaseAllowance(address,uint256,string[])\":{\"details\":\"Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"redelegate(address,string,string,uint256)\":{\"details\":\"Defines a method for performing a redelegation of coins from a delegator and source validator to a destination validator.\",\"params\":{\"amount\":\"The amount to be redelegated to the validator\",\"delegatorAddress\":\"The address of the delegator\",\"validatorDstAddress\":\"The validator to which the redelegation is destined\",\"validatorSrcAddress\":\"The validator from which the redelegation is initiated\"},\"returns\":{\"completionTime\":\"The time when the redelegation is completed\"}},\"redelegation(address,string,string)\":{\"details\":\"Queries all redelegations from a source to a destination validator for a given delegator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"dstValidatorAddress\":\"Defines the validator address to redelegate to.\",\"srcValidatorAddress\":\"Defines the validator address to redelegate from.\"},\"returns\":{\"entries\":\"The active redelegations for the given delegator, source and destination validator combination.\"}},\"redelegations(address,string,string,(bytes,uint64,uint64,bool,bool))\":{\"details\":\"Queries all redelegations from a source to to a destination validator for a given delegator in a specified pagination manner.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"dstValidatorAddress\":\"Defines the validator address to redelegate to.\",\"pageRequest\":\"Defines an optional pagination for the request.\",\"srcValidatorAddress\":\"Defines the validator address to redelegate from.\"},\"returns\":{\"response\":\"Holds the redelegations for the given delegator, source and destination validator combination.\"}},\"unbondingDelegation(address,string)\":{\"details\":\"Returns the delegation shares and coins, that are currently unbonding for a given delegator and validator pair.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"validatorAddress\":\"The address of the validator.\"},\"returns\":{\"entries\":\"The delegations that are currently unbonding.\"}},\"undelegate(address,string,uint256)\":{\"details\":\"Defines a method for performing an undelegation from a delegate and a validator.\",\"params\":{\"amount\":\"The amount to be undelegated from the validator\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"completionTime\":\"The time when the undelegation is completed\"}},\"validator(string)\":{\"details\":\"Queries validator info for a given validator address.\",\"params\":{\"validatorAddress\":\"The address of the validator.\"},\"returns\":{\"validators\":\"The validator info for the given validator address.\"}},\"validators(string,(bytes,uint64,uint64,bool,bool))\":{\"details\":\"Queries all validators that match the given status.\",\"params\":{\"pageRequest\":\"Defines an optional pagination for the request.\",\"status\":\"Enables to query for validators matching a given status.\"}}},\"title\":\"Staking Precompiled Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/stateful/Staking.sol\":\"StakingI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/common/Authorization.sol\":{\"keccak256\":\"0xf77a5f9eb42b7f546d2beeb49e1c120f0491620fbf1402a687ac34a275c6cb05\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://166523692d8779b98a4963ab4a9f5a9aeb4ade68803051b88816de82496ffda7\",\"dweb:/ipfs/QmYCndS9oDJ3cF7A5admkYN2SyZzBg6129DBjvYKSd8Bnv\"]},\"contracts/common/Types.sol\":{\"keccak256\":\"0x2280bf7e63e011c5263d33ae3cf64673e27ee08226116a5ae289a05c026e5cc8\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://e5c63f09b85147d1343d16c828110369fea9535c1ad69d7855f1f6f04208eaa7\",\"dweb:/ipfs/QmQFbYkU3ao25UjSYDqUUP1sPEzFJqJnT2xAgfo5g2ghmA\"]},\"contracts/stateful/Staking.sol\":{\"keccak256\":\"0x774d4bf7a848893697fa75fa11a2ec288e6df6f010f9bdd8b3c6010ef007ac67\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://459ec9fd703b368a4c7a36bb33a3bb37941f1d4c03211fa79902225ebed7117d\",\"dweb:/ipfs/QmQ5rPCr1fQyzUAuP8saGVEd7vry7tuW4ULq4EaeL1tsUv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/SLD.sol": {
				"ast": {
					"absolutePath": "contracts/SLD.sol",
					"exportedSymbols": {
						"BondStatus": [
							470
						],
						"Coin": [
							142
						],
						"Commission": [
							393
						],
						"CommissionRates": [
							387
						],
						"DISTRIBUTION_CONTRACT": [
							179
						],
						"DISTRIBUTION_PRECOMPILE_ADDRESS": [
							162
						],
						"Dec": [
							137
						],
						"DecCoin": [
							149
						],
						"DelegationDelegatorReward": [
							203
						],
						"DistributionI": [
							352
						],
						"LiquidityStakingInsurance": [
							4
						],
						"MSG_CANCEL_UNDELEGATION": [
							380
						],
						"MSG_DELEGATE": [
							371
						],
						"MSG_REDELEGATE": [
							377
						],
						"MSG_SET_WITHDRAWER_ADDRESS": [
							166
						],
						"MSG_UNDELEGATE": [
							374
						],
						"MSG_WITHDRAW_DELEGATOR_REWARD": [
							169
						],
						"MSG_WITHDRAW_VALIDATOR_COMMISSION": [
							172
						],
						"PageRequest": [
							465
						],
						"PageResponse": [
							154
						],
						"Redelegation": [
							430
						],
						"RedelegationEntry": [
							445
						],
						"RedelegationEntryResponse": [
							436
						],
						"RedelegationResponse": [
							425
						],
						"STAKING_CONTRACT": [
							367
						],
						"STAKING_PRECOMPILE_ADDRESS": [
							360
						],
						"StakingI": [
							653
						],
						"UnbondingDelegationEntry": [
							454
						],
						"Validator": [
							417
						],
						"ValidatorDistributionInfo": [
							196
						],
						"ValidatorSlashEvent": [
							185
						],
						"authorization": [
							355
						],
						"genericAuth": [
							157
						]
					},
					"id": 5,
					"license": "LGPL-v3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:25:0"
						},
						{
							"absolutePath": "contracts/stateful/Distribution.sol",
							"file": "contracts/stateful/Distribution.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5,
							"sourceUnit": 353,
							"src": "63:45:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/stateful/Staking.sol",
							"file": "contracts/stateful/Staking.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5,
							"sourceUnit": 654,
							"src": "109:40:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LiquidityStakingInsurance",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4,
							"linearizedBaseContracts": [
								4
							],
							"name": "LiquidityStakingInsurance",
							"nameLocation": "160:25:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 5,
							"src": "151:42:0",
							"usedErrors": []
						}
					],
					"src": "36:157:0"
				},
				"id": 0
			},
			"contracts/common/Authorization.sol": {
				"ast": {
					"absolutePath": "contracts/common/Authorization.sol",
					"exportedSymbols": {
						"AuthorizationI": [
							84
						]
					},
					"id": 85,
					"license": "LGPL-v3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 6,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:25:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AuthorizationI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 7,
								"nodeType": "StructuredDocumentation",
								"src": "63:159:1",
								"text": "@author Evmos Team\n @title Authorization Interface\n @dev The interface through which solidity contracts will interact with smart contract approvals."
							},
							"fullyImplemented": false,
							"id": 84,
							"linearizedBaseContracts": [
								84
							],
							"name": "AuthorizationI",
							"nameLocation": "232:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "253:362:1",
										"text": "@dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n @param spender The address which will spend the funds.\n @param amount The amount of tokens to be spent.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."
									},
									"functionSelector": "b6039895",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "629:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "654:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "646:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "679:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "671:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "713:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "695:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 13,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "695:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 14,
													"nodeType": "ArrayTypeName",
													"src": "695:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:90:1"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "750:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "745:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "745:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:15:1"
									},
									"scope": 84,
									"src": "620:140:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "766:400:1",
										"text": "@dev Increase the allowance of a given spender by a specific amount of tokens for IBC\n transfer methods or staking.\n @param spender The address which will spend the funds.\n @param amount The amount of tokens to be spent.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."
									},
									"functionSelector": "a386a63c",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "1180:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1215:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1207:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1207:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1240:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1232:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "1274:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1256:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 26,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1256:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 27,
													"nodeType": "ArrayTypeName",
													"src": "1256:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1197:90:1"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1311:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1306:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1306:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:15:1"
									},
									"scope": 84,
									"src": "1171:150:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1327:401:1",
										"text": "@dev Decreases the allowance of a given spender by a specific amount of tokens for IBC\n transfer methods or staking.\n @param spender The address which will spend the funds.\n @param amount The amount of tokens to be spent.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."
									},
									"functionSelector": "f007d286",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "1742:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1802:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1794:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "1836:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1818:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 39,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1818:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 40,
													"nodeType": "ArrayTypeName",
													"src": "1818:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:90:1"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1873:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1868:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1868:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:15:1"
									},
									"scope": 84,
									"src": "1733:150:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1890:504:1",
										"text": "@dev Returns the remaining number of tokens that spender will be allowed to spend\n on behalf of the owner through IBC transfer methods or staking. This is zero by default.\n @param owner The address of the account owning tokens.\n @param spender The address of the account able to transfer the tokens.\n @param method The message type URL of the methods for which the approval should be queried.\n @return remaining The remaining number of tokens available to be spent."
									},
									"functionSelector": "fc08930c",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2408:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2435:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2427:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2458:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2450:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2450:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "method",
												"nameLocation": "2491:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2475:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 52,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2475:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:86:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "remaining",
												"nameLocation": "2535:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2527:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2527:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2526:19:1"
									},
									"scope": 84,
									"src": "2399:147:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2552:510:1",
										"text": "@dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n The value field specifies the new allowance and the methods field holds the information for which methods\n the approval was set.\n @param owner The owner of the tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods for which the approval is set.\n @param value The amount of tokens approved to be spent."
									},
									"eventSelector": "f2638649a77447a76543b3e27c31ee0febe7de7fb20e2b6a781d08207bc7cb8d",
									"id": 70,
									"name": "Approval",
									"nameLocation": "3073:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3107:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3091:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3091:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3138:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3122:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3122:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": false,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "3164:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3155:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 64,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "3155:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 65,
													"nodeType": "ArrayTypeName",
													"src": "3155:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3189:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3181:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3181:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3081:119:1"
									},
									"src": "3067:134:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3207:541:1",
										"text": "@dev This event is emitted when the allowance of a spender is changed by a call to the decrease or increase\n allowance method. The values field specifies the new allowances and the methods field holds the\n information for which methods the approval was set.\n @param owner The owner of the tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods for which the approval is set.\n @param values The amounts of tokens approved to be spent."
									},
									"eventSelector": "5a22c7e8af595d94a6d652de8e346a8ecdfe49fc2e0e976f33c9fc9358390ea4",
									"id": 83,
									"name": "AllowanceChange",
									"nameLocation": "3759:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3800:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "3784:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3831:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "3815:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": false,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "3857:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "3848:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 76,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "3848:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 77,
													"nodeType": "ArrayTypeName",
													"src": "3848:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "3884:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "3874:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 79,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3874:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 80,
													"nodeType": "ArrayTypeName",
													"src": "3874:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3774:122:1"
									},
									"src": "3753:144:1"
								}
							],
							"scope": 85,
							"src": "222:3677:1",
							"usedErrors": []
						}
					],
					"src": "36:3864:1"
				},
				"id": 1
			},
			"contracts/common/GenericAuthorization.sol": {
				"ast": {
					"absolutePath": "contracts/common/GenericAuthorization.sol",
					"exportedSymbols": {
						"GenericAuthorizationI": [
							130
						]
					},
					"id": 131,
					"license": "LGPL-v3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 86,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:25:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GenericAuthorizationI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 87,
								"nodeType": "StructuredDocumentation",
								"src": "63:159:2",
								"text": "@author Evmos Team\n @title Authorization Interface\n @dev The interface through which solidity contracts will interact with smart contract approvals."
							},
							"fullyImplemented": false,
							"id": 130,
							"linearizedBaseContracts": [
								130
							],
							"name": "GenericAuthorizationI",
							"nameLocation": "232:21:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "260:306:2",
										"text": "@dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."
									},
									"functionSelector": "7a9841ed",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "580:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "605:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "597:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "640:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "622:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 91,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "622:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 92,
													"nodeType": "ArrayTypeName",
													"src": "622:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:66:2"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "677:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "672:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 95,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "672:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:15:2"
									},
									"scope": 130,
									"src": "571:116:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "693:265:2",
										"text": "@dev Revokes a list of Cosmos transactions.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods to revoke.\n @return revoked Boolean value to indicate if the revocation was successful."
									},
									"functionSelector": "61dc5c3b",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revoke",
									"nameLocation": "972:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "996:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "988:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "1031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1013:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 102,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1013:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 103,
													"nodeType": "ArrayTypeName",
													"src": "1013:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:66:2"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "revoked",
												"nameLocation": "1068:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1063:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:14:2"
									},
									"scope": 130,
									"src": "963:114:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1083:446:2",
										"text": "@dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n The value field specifies the new allowance and the methods field holds the information for which methods\n the approval was set.\n @param owner The owner of the tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods for which the approval is set."
									},
									"eventSelector": "e2d9366a7f75ef8fcafbe7902248eb78d4b2dae87d48522003814979d166ae86",
									"id": 119,
									"name": "Approval",
									"nameLocation": "1540:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1558:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1605:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1589:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"indexed": false,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "1631:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1622:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 115,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1622:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 116,
													"nodeType": "ArrayTypeName",
													"src": "1622:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:96:2"
									},
									"src": "1534:111:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1651:275:2",
										"text": "@dev This event is emitted when an owner revokes a spender's allowance.\n @param owner The owner of the tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods for which the approval is set."
									},
									"eventSelector": "b0901d422521d0496e60bfbd8023b219d603a6cb950b43b2fe95043676cb353e",
									"id": 129,
									"name": "Revocation",
									"nameLocation": "1937:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1973:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "1957:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1957:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "1988:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"indexed": false,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "2030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2021:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 125,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "2021:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 126,
													"nodeType": "ArrayTypeName",
													"src": "2021:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:96:2"
									},
									"src": "1931:113:2"
								}
							],
							"scope": 131,
							"src": "222:1824:2",
							"usedErrors": []
						}
					],
					"src": "36:2011:2"
				},
				"id": 2
			},
			"contracts/common/Types.sol": {
				"ast": {
					"absolutePath": "contracts/common/Types.sol",
					"exportedSymbols": {
						"Coin": [
							142
						],
						"Dec": [
							137
						],
						"DecCoin": [
							149
						],
						"PageResponse": [
							154
						]
					},
					"id": 155,
					"license": "LGPL-v3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 132,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:25:3"
						},
						{
							"canonicalName": "Dec",
							"id": 137,
							"members": [
								{
									"constant": false,
									"id": 134,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "88:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 137,
									"src": "80:13:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 133,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "80:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "precision",
									"nameLocation": "105:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 137,
									"src": "99:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 135,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "99:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Dec",
							"nameLocation": "70:3:3",
							"nodeType": "StructDefinition",
							"scope": 155,
							"src": "63:54:3",
							"visibility": "public"
						},
						{
							"canonicalName": "Coin",
							"id": 142,
							"members": [
								{
									"constant": false,
									"id": 139,
									"mutability": "mutable",
									"name": "denom",
									"nameLocation": "229:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 142,
									"src": "222:12:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 138,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "222:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "248:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 142,
									"src": "240:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "240:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Coin",
							"nameLocation": "211:4:3",
							"nodeType": "StructDefinition",
							"scope": 155,
							"src": "204:53:3",
							"visibility": "public"
						},
						{
							"canonicalName": "DecCoin",
							"id": 149,
							"members": [
								{
									"constant": false,
									"id": 144,
									"mutability": "mutable",
									"name": "denom",
									"nameLocation": "388:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "381:12:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 143,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "381:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 146,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "407:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "399:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 145,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "399:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 148,
									"mutability": "mutable",
									"name": "precision",
									"nameLocation": "425:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "419:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 147,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "419:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "DecCoin",
							"nameLocation": "367:7:3",
							"nodeType": "StructDefinition",
							"scope": 155,
							"src": "360:77:3",
							"visibility": "public"
						},
						{
							"canonicalName": "PageResponse",
							"id": 154,
							"members": [
								{
									"constant": false,
									"id": 151,
									"mutability": "mutable",
									"name": "nextKey",
									"nameLocation": "538:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "532:13:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 150,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "532:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 153,
									"mutability": "mutable",
									"name": "total",
									"nameLocation": "558:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "551:12:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 152,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "551:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "PageResponse",
							"nameLocation": "513:12:3",
							"nodeType": "StructDefinition",
							"scope": 155,
							"src": "506:60:3",
							"visibility": "public"
						}
					],
					"src": "36:531:3"
				},
				"id": 3
			},
			"contracts/stateful/Distribution.sol": {
				"ast": {
					"absolutePath": "contracts/stateful/Distribution.sol",
					"exportedSymbols": {
						"Coin": [
							142
						],
						"DISTRIBUTION_CONTRACT": [
							179
						],
						"DISTRIBUTION_PRECOMPILE_ADDRESS": [
							162
						],
						"Dec": [
							137
						],
						"DecCoin": [
							149
						],
						"DelegationDelegatorReward": [
							203
						],
						"DistributionI": [
							352
						],
						"MSG_SET_WITHDRAWER_ADDRESS": [
							166
						],
						"MSG_WITHDRAW_DELEGATOR_REWARD": [
							169
						],
						"MSG_WITHDRAW_VALIDATOR_COMMISSION": [
							172
						],
						"PageResponse": [
							154
						],
						"ValidatorDistributionInfo": [
							196
						],
						"ValidatorSlashEvent": [
							185
						],
						"genericAuth": [
							157
						]
					},
					"id": 353,
					"license": "LGPL-v3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 156,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".17",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:28:4"
						},
						{
							"absolutePath": "contracts/common/GenericAuthorization.sol",
							"file": "../common/GenericAuthorization.sol",
							"id": 157,
							"nameLocation": "113:11:4",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 131,
							"src": "66:59:4",
							"symbolAliases": [],
							"unitAlias": "genericAuth"
						},
						{
							"absolutePath": "contracts/common/Types.sol",
							"file": "../common/Types.sol",
							"id": 158,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 155,
							"src": "126:29:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"constant": true,
							"id": 162,
							"mutability": "constant",
							"name": "DISTRIBUTION_PRECOMPILE_ADDRESS",
							"nameLocation": "221:31:4",
							"nodeType": "VariableDeclaration",
							"scope": 353,
							"src": "204:93:4",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 160,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "204:7:4",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030383031",
								"id": 161,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "255:42:4",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"value": "0x0000000000000000000000000000000000000801"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 166,
							"mutability": "constant",
							"name": "MSG_SET_WITHDRAWER_ADDRESS",
							"nameLocation": "372:26:4",
							"nodeType": "VariableDeclaration",
							"scope": 353,
							"src": "356:97:4",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_string_memory_ptr",
								"typeString": "string"
							},
							"typeName": {
								"id": 164,
								"name": "string",
								"nodeType": "ElementaryTypeName",
								"src": "356:6:4",
								"typeDescriptions": {
									"typeIdentifier": "t_string_storage_ptr",
									"typeString": "string"
								}
							},
							"value": {
								"hexValue": "2f636f736d6f732e646973747269627574696f6e2e763162657461312e4d7367536574576974686472617741646472657373",
								"id": 165,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "401:52:4",
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_676444a09bae852212733c06aa01b4fb509c69e94cfae86e091c82c9b8092262",
									"typeString": "literal_string \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\""
								},
								"value": "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 169,
							"mutability": "constant",
							"name": "MSG_WITHDRAW_DELEGATOR_REWARD",
							"nameLocation": "471:29:4",
							"nodeType": "VariableDeclaration",
							"scope": 353,
							"src": "455:105:4",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_string_memory_ptr",
								"typeString": "string"
							},
							"typeName": {
								"id": 167,
								"name": "string",
								"nodeType": "ElementaryTypeName",
								"src": "455:6:4",
								"typeDescriptions": {
									"typeIdentifier": "t_string_storage_ptr",
									"typeString": "string"
								}
							},
							"value": {
								"hexValue": "2f636f736d6f732e646973747269627574696f6e2e763162657461312e4d7367576974686472617744656c656761746f72526577617264",
								"id": 168,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "503:57:4",
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_a80ac1de3135a636726973fe89306b48710e1e16488d89fb49580776524185b3",
									"typeString": "literal_string \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\""
								},
								"value": "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 172,
							"mutability": "constant",
							"name": "MSG_WITHDRAW_VALIDATOR_COMMISSION",
							"nameLocation": "578:33:4",
							"nodeType": "VariableDeclaration",
							"scope": 353,
							"src": "562:113:4",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_string_memory_ptr",
								"typeString": "string"
							},
							"typeName": {
								"id": 170,
								"name": "string",
								"nodeType": "ElementaryTypeName",
								"src": "562:6:4",
								"typeDescriptions": {
									"typeIdentifier": "t_string_storage_ptr",
									"typeString": "string"
								}
							},
							"value": {
								"hexValue": "2f636f736d6f732e646973747269627574696f6e2e763162657461312e4d7367576974686472617756616c696461746f72436f6d6d697373696f6e",
								"id": 171,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "614:61:4",
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_ffe1bf93f0fe502fb0f961db98fe854ee1fd6d2519e43ee67a536717ae34be1b",
									"typeString": "literal_string \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\""
								},
								"value": "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 179,
							"mutability": "constant",
							"name": "DISTRIBUTION_CONTRACT",
							"nameLocation": "749:21:4",
							"nodeType": "VariableDeclaration",
							"scope": 353,
							"src": "726:93:4",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_DistributionI_$352",
								"typeString": "contract DistributionI"
							},
							"typeName": {
								"id": 175,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 174,
									"name": "DistributionI",
									"nameLocations": [
										"726:13:4"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 352,
									"src": "726:13:4"
								},
								"referencedDeclaration": 352,
								"src": "726:13:4",
								"typeDescriptions": {
									"typeIdentifier": "t_contract$_DistributionI_$352",
									"typeString": "contract DistributionI"
								}
							},
							"value": {
								"arguments": [
									{
										"id": 177,
										"name": "DISTRIBUTION_PRECOMPILE_ADDRESS",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 162,
										"src": "787:31:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 176,
									"name": "DistributionI",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 352,
									"src": "773:13:4",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_contract$_DistributionI_$352_$",
										"typeString": "type(contract DistributionI)"
									}
								},
								"id": 178,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "773:46:4",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_contract$_DistributionI_$352",
									"typeString": "contract DistributionI"
								}
							},
							"visibility": "internal"
						},
						{
							"canonicalName": "ValidatorSlashEvent",
							"id": 185,
							"members": [
								{
									"constant": false,
									"id": 181,
									"mutability": "mutable",
									"name": "validatorPeriod",
									"nameLocation": "862:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "855:22:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 180,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "855:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "fraction",
									"nameLocation": "887:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "883:12:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Dec_$137_storage_ptr",
										"typeString": "struct Dec"
									},
									"typeName": {
										"id": 183,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 182,
											"name": "Dec",
											"nameLocations": [
												"883:3:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 137,
											"src": "883:3:4"
										},
										"referencedDeclaration": 137,
										"src": "883:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Dec_$137_storage_ptr",
											"typeString": "struct Dec"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ValidatorSlashEvent",
							"nameLocation": "829:19:4",
							"nodeType": "StructDefinition",
							"scope": 353,
							"src": "822:76:4",
							"visibility": "public"
						},
						{
							"canonicalName": "ValidatorDistributionInfo",
							"id": 196,
							"members": [
								{
									"constant": false,
									"id": 187,
									"mutability": "mutable",
									"name": "operatorAddress",
									"nameLocation": "946:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "939:22:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 186,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "939:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 191,
									"mutability": "mutable",
									"name": "selfBondRewards",
									"nameLocation": "977:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "967:25:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_DecCoin_$149_storage_$dyn_storage_ptr",
										"typeString": "struct DecCoin[]"
									},
									"typeName": {
										"baseType": {
											"id": 189,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 188,
												"name": "DecCoin",
												"nameLocations": [
													"967:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 149,
												"src": "967:7:4"
											},
											"referencedDeclaration": 149,
											"src": "967:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_DecCoin_$149_storage_ptr",
												"typeString": "struct DecCoin"
											}
										},
										"id": 190,
										"nodeType": "ArrayTypeName",
										"src": "967:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_DecCoin_$149_storage_$dyn_storage_ptr",
											"typeString": "struct DecCoin[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 195,
									"mutability": "mutable",
									"name": "commission",
									"nameLocation": "1008:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "998:20:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_DecCoin_$149_storage_$dyn_storage_ptr",
										"typeString": "struct DecCoin[]"
									},
									"typeName": {
										"baseType": {
											"id": 193,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 192,
												"name": "DecCoin",
												"nameLocations": [
													"998:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 149,
												"src": "998:7:4"
											},
											"referencedDeclaration": 149,
											"src": "998:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_DecCoin_$149_storage_ptr",
												"typeString": "struct DecCoin"
											}
										},
										"id": 194,
										"nodeType": "ArrayTypeName",
										"src": "998:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_DecCoin_$149_storage_$dyn_storage_ptr",
											"typeString": "struct DecCoin[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ValidatorDistributionInfo",
							"nameLocation": "907:25:4",
							"nodeType": "StructDefinition",
							"scope": 353,
							"src": "900:121:4",
							"visibility": "public"
						},
						{
							"canonicalName": "DelegationDelegatorReward",
							"id": 203,
							"members": [
								{
									"constant": false,
									"id": 198,
									"mutability": "mutable",
									"name": "validatorAddress",
									"nameLocation": "1069:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 203,
									"src": "1062:23:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 197,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1062:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 202,
									"mutability": "mutable",
									"name": "reward",
									"nameLocation": "1101:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 203,
									"src": "1091:16:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_DecCoin_$149_storage_$dyn_storage_ptr",
										"typeString": "struct DecCoin[]"
									},
									"typeName": {
										"baseType": {
											"id": 200,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 199,
												"name": "DecCoin",
												"nameLocations": [
													"1091:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 149,
												"src": "1091:7:4"
											},
											"referencedDeclaration": 149,
											"src": "1091:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_DecCoin_$149_storage_ptr",
												"typeString": "struct DecCoin"
											}
										},
										"id": 201,
										"nodeType": "ArrayTypeName",
										"src": "1091:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_DecCoin_$149_storage_$dyn_storage_ptr",
											"typeString": "struct DecCoin[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "DelegationDelegatorReward",
							"nameLocation": "1030:25:4",
							"nodeType": "StructDefinition",
							"scope": 353,
							"src": "1023:87:4",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 205,
										"name": "genericAuth.GenericAuthorizationI",
										"nameLocations": [
											"1357:11:4",
											"1369:21:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 130,
										"src": "1357:33:4"
									},
									"id": 206,
									"nodeType": "InheritanceSpecifier",
									"src": "1357:33:4"
								}
							],
							"canonicalName": "DistributionI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 204,
								"nodeType": "StructuredDocumentation",
								"src": "1112:218:4",
								"text": "@author Evmos Team\n @title Distribution Precompile Contract\n @dev The interface through which solidity contracts will interact with Distribution\n @custom:address 0x0000000000000000000000000000000000000801"
							},
							"fullyImplemented": false,
							"id": 352,
							"linearizedBaseContracts": [
								352,
								130
							],
							"name": "DistributionI",
							"nameLocation": "1340:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "1397:344:4",
										"text": "TRANSACTIONS\n @dev Change the address, that can withdraw the rewards of a delegator.\n Note that this address cannot be a module account.\n @param delegatorAddress The address of the delegator\n @param withdrawerAddress The address that will be capable of withdrawing rewards for\n the given delegator address"
									},
									"functionSelector": "5a9d9a96",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setWithdrawAddress",
									"nameLocation": "1755:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "1791:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1783:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1783:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "withdrawerAddress",
												"nameLocation": "1831:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1817:31:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 210,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1817:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1773:81:4"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1878:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1873:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1873:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:14:4"
									},
									"scope": 352,
									"src": "1746:141:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "1893:235:4",
										"text": "@dev Withdraw the rewards of a delegator from a validator\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @return amount The amount of Coin withdrawn"
									},
									"functionSelector": "b46a8d61",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawDelegatorRewards",
									"nameLocation": "2142:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "2184:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "2176:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2176:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "2224:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "2210:30:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 220,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:80:4"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2298:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "2282:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Coin_$142_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Coin[]"
												},
												"typeName": {
													"baseType": {
														"id": 224,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 223,
															"name": "Coin",
															"nameLocations": [
																"2282:4:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 142,
															"src": "2282:4:4"
														},
														"referencedDeclaration": 142,
														"src": "2282:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Coin_$142_storage_ptr",
															"typeString": "struct Coin"
														}
													},
													"id": 225,
													"nodeType": "ArrayTypeName",
													"src": "2282:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Coin_$142_storage_$dyn_storage_ptr",
														"typeString": "struct Coin[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2272:38:4"
									},
									"scope": 352,
									"src": "2133:178:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "2317:170:4",
										"text": "@dev Withdraws the rewards commission of a validator.\n @param validatorAddress The address of the validator\n @return amount The amount of Coin withdrawn"
									},
									"functionSelector": "3ce4e3be",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawValidatorCommission",
									"nameLocation": "2501:27:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "2552:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2538:30:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 230,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2538:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2528:46:4"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2626:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2610:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Coin_$142_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Coin[]"
												},
												"typeName": {
													"baseType": {
														"id": 234,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 233,
															"name": "Coin",
															"nameLocations": [
																"2610:4:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 142,
															"src": "2610:4:4"
														},
														"referencedDeclaration": 142,
														"src": "2610:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Coin_$142_storage_ptr",
															"typeString": "struct Coin"
														}
													},
													"id": 235,
													"nodeType": "ArrayTypeName",
													"src": "2610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Coin_$142_storage_$dyn_storage_ptr",
														"typeString": "struct Coin[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2600:38:4"
									},
									"scope": 352,
									"src": "2492:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2645:224:4",
										"text": "QUERIES\n @dev Queries validator commission and self-delegation rewards for validator.\n @param validatorAddress The address of the validator\n @return distributionInfo The validator's distribution info"
									},
									"functionSelector": "54212a89",
									"id": 248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validatorDistributionInfo",
									"nameLocation": "2883:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "2932:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "2918:30:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2918:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2908:46:4"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "distributionInfo",
												"nameLocation": "3036:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "2999:53:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ValidatorDistributionInfo_$196_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ValidatorDistributionInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 244,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 243,
															"name": "ValidatorDistributionInfo",
															"nameLocations": [
																"2999:25:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 196,
															"src": "2999:25:4"
														},
														"referencedDeclaration": 196,
														"src": "2999:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ValidatorDistributionInfo_$196_storage_ptr",
															"typeString": "struct ValidatorDistributionInfo"
														}
													},
													"id": 245,
													"nodeType": "ArrayTypeName",
													"src": "2999:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ValidatorDistributionInfo_$196_storage_$dyn_storage_ptr",
														"typeString": "struct ValidatorDistributionInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:104:4"
									},
									"scope": 352,
									"src": "2874:220:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "3100:185:4",
										"text": "@dev Queries the outstanding rewards of a validator address.\n @param validatorAddress The address of the validator\n @return rewards The validator's outstanding rewards"
									},
									"functionSelector": "85b2d2da",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validatorOutstandingRewards",
									"nameLocation": "3299:27:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "3350:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3336:30:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 250,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3336:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3326:46:4"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "3436:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3417:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DecCoin_$149_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct DecCoin[]"
												},
												"typeName": {
													"baseType": {
														"id": 254,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 253,
															"name": "DecCoin",
															"nameLocations": [
																"3417:7:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 149,
															"src": "3417:7:4"
														},
														"referencedDeclaration": 149,
														"src": "3417:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DecCoin_$149_storage_ptr",
															"typeString": "struct DecCoin"
														}
													},
													"id": 255,
													"nodeType": "ArrayTypeName",
													"src": "3417:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DecCoin_$149_storage_$dyn_storage_ptr",
														"typeString": "struct DecCoin[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3407:42:4"
									},
									"scope": 352,
									"src": "3290:160:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3456:175:4",
										"text": "@dev Queries the accumulated commission for a validator.\n @param validatorAddress The address of the validator\n @return commission The validator's commission"
									},
									"functionSelector": "3dd40f78",
									"id": 268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validatorCommission",
									"nameLocation": "3645:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "3688:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3674:30:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 260,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3674:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3664:46:4"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "commission",
												"nameLocation": "3774:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3755:29:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DecCoin_$149_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct DecCoin[]"
												},
												"typeName": {
													"baseType": {
														"id": 264,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 263,
															"name": "DecCoin",
															"nameLocations": [
																"3755:7:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 149,
															"src": "3755:7:4"
														},
														"referencedDeclaration": 149,
														"src": "3755:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DecCoin_$149_storage_ptr",
															"typeString": "struct DecCoin"
														}
													},
													"id": 265,
													"nodeType": "ArrayTypeName",
													"src": "3755:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DecCoin_$149_storage_$dyn_storage_ptr",
														"typeString": "struct DecCoin[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3745:45:4"
									},
									"scope": 352,
									"src": "3636:155:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3797:407:4",
										"text": "@dev Queries the slashing events for a validator in a given height interval\n defined by the starting and ending height.\n @param validatorAddress The address of the validator\n @param startingHeight The starting height\n @param endingHeight The ending height\n @return slashes The validator's slash events\n @return pageResponse The pagination response for the query"
									},
									"functionSelector": "a75395a5",
									"id": 285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validatorSlashes",
									"nameLocation": "4218:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "4258:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4244:30:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4244:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "startingHeight",
												"nameLocation": "4291:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4284:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 272,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4284:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "endingHeight",
												"nameLocation": "4322:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4315:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 274,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4315:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:106:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "slashes",
												"nameLocation": "4416:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4385:38:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ValidatorSlashEvent_$185_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ValidatorSlashEvent[]"
												},
												"typeName": {
													"baseType": {
														"id": 278,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 277,
															"name": "ValidatorSlashEvent",
															"nameLocations": [
																"4385:19:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 185,
															"src": "4385:19:4"
														},
														"referencedDeclaration": 185,
														"src": "4385:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ValidatorSlashEvent_$185_storage_ptr",
															"typeString": "struct ValidatorSlashEvent"
														}
													},
													"id": 279,
													"nodeType": "ArrayTypeName",
													"src": "4385:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ValidatorSlashEvent_$185_storage_$dyn_storage_ptr",
														"typeString": "struct ValidatorSlashEvent[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "pageResponse",
												"nameLocation": "4455:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4433:34:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PageResponse_$154_calldata_ptr",
													"typeString": "struct PageResponse"
												},
												"typeName": {
													"id": 282,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 281,
														"name": "PageResponse",
														"nameLocations": [
															"4433:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 154,
														"src": "4433:12:4"
													},
													"referencedDeclaration": 154,
													"src": "4433:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PageResponse_$154_storage_ptr",
														"typeString": "struct PageResponse"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4375:98:4"
									},
									"scope": 352,
									"src": "4209:265:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "4480:293:4",
										"text": "@dev Queries the total rewards accrued by a delegation from a specific address to a given validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @return rewards The total rewards accrued by a delegation."
									},
									"functionSelector": "9ad563b4",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegationRewards",
									"nameLocation": "4787:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "4822:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4814:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4814:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "4862:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4848:30:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4848:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4804:80:4"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "4948:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4929:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DecCoin_$149_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct DecCoin[]"
												},
												"typeName": {
													"baseType": {
														"id": 293,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 292,
															"name": "DecCoin",
															"nameLocations": [
																"4929:7:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 149,
															"src": "4929:7:4"
														},
														"referencedDeclaration": 149,
														"src": "4929:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DecCoin_$149_storage_ptr",
															"typeString": "struct DecCoin"
														}
													},
													"id": 294,
													"nodeType": "ArrayTypeName",
													"src": "4929:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DecCoin_$149_storage_$dyn_storage_ptr",
														"typeString": "struct DecCoin[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:42:4"
									},
									"scope": 352,
									"src": "4778:184:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "4968:318:4",
										"text": "@dev Queries the total rewards accrued by each validator, that a given\n address has delegated to.\n @param delegatorAddress The address of the delegator\n @return rewards The total rewards accrued by each validator for a delegator.\n @return total The total rewards accrued by a delegator."
									},
									"functionSelector": "54be1a28",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegationTotalRewards",
									"nameLocation": "5300:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "5340:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "5332:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5322:40:4"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "5444:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "5407:44:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DelegationDelegatorReward_$203_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct DelegationDelegatorReward[]"
												},
												"typeName": {
													"baseType": {
														"id": 303,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 302,
															"name": "DelegationDelegatorReward",
															"nameLocations": [
																"5407:25:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 203,
															"src": "5407:25:4"
														},
														"referencedDeclaration": 203,
														"src": "5407:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DelegationDelegatorReward_$203_storage_ptr",
															"typeString": "struct DelegationDelegatorReward"
														}
													},
													"id": 304,
													"nodeType": "ArrayTypeName",
													"src": "5407:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DelegationDelegatorReward_$203_storage_$dyn_storage_ptr",
														"typeString": "struct DelegationDelegatorReward[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "total",
												"nameLocation": "5480:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "5461:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DecCoin_$149_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct DecCoin[]"
												},
												"typeName": {
													"baseType": {
														"id": 307,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 306,
															"name": "DecCoin",
															"nameLocations": [
																"5461:7:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 149,
															"src": "5461:7:4"
														},
														"referencedDeclaration": 149,
														"src": "5461:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DecCoin_$149_storage_ptr",
															"typeString": "struct DecCoin"
														}
													},
													"id": 308,
													"nodeType": "ArrayTypeName",
													"src": "5461:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DecCoin_$149_storage_$dyn_storage_ptr",
														"typeString": "struct DecCoin[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5397:94:4"
									},
									"scope": 352,
									"src": "5291:201:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "5498:237:4",
										"text": "@dev Queries all validators, that a given address has delegated to.\n @param delegatorAddress The address of the delegator\n @return validators The addresses of all validators, that were delegated to by the given address."
									},
									"functionSelector": "a66cb605",
									"id": 320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegatorValidators",
									"nameLocation": "5749:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "5786:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "5778:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5778:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5768:40:4"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "validators",
												"nameLocation": "5850:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "5832:28:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 316,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "5832:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 317,
													"nodeType": "ArrayTypeName",
													"src": "5832:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5831:30:4"
									},
									"scope": 352,
									"src": "5740:122:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "5868:237:4",
										"text": "@dev Queries the address capable of withdrawing rewards for a given delegator.\n @param delegatorAddress The address of the delegator\n @return withdrawAddress The address capable of withdrawing rewards for the delegator."
									},
									"functionSelector": "5431f450",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegatorWithdrawAddress",
									"nameLocation": "6119:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "6161:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "6153:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6143:40:4"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "6221:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "6207:29:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 325,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6207:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6206:31:4"
									},
									"scope": 352,
									"src": "6110:128:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "6244:215:4",
										"text": "@dev SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\n @param caller the caller of the transaction\n @param withdrawerAddress the newly set withdrawer address"
									},
									"eventSelector": "b55d29542a844fa64e70cbc06556201957fa0253fe7b54677830b586e2288e1e",
									"id": 335,
									"name": "SetWithdrawerAddress",
									"nameLocation": "6470:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "6516:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "6500:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6500:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawerAddress",
												"nameLocation": "6539:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "6532:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6532:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6490:72:4"
									},
									"src": "6464:99:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "6569:294:4",
										"text": "@dev WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\n @param delegatorAddress the address of the delegator\n @param validatorAddress the address of the validator\n @param amount the amount being withdrawn from the delegation"
									},
									"eventSelector": "8d0912e7f8b09f64d001b73731ae9eecce7fe900e91a92ee9499659777450112",
									"id": 344,
									"name": "WithdrawDelegatorRewards",
									"nameLocation": "6874:24:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "6924:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "6908:32:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6908:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"indexed": true,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "6965:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "6950:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6950:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6999:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "6991:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6991:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6898:113:4"
									},
									"src": "6868:144:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "7018:246:4",
										"text": "@dev WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\n @param validatorAddress is the address of the validator\n @param commission is the total commission earned by the validator"
									},
									"eventSelector": "27596802346c7411d593e471243e3f9570666fade155d35f26150d851fdaf587",
									"id": 351,
									"name": "WithdrawValidatorCommission",
									"nameLocation": "7275:27:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"indexed": true,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "7327:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "7312:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 346,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7312:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"indexed": false,
												"mutability": "mutable",
												"name": "commission",
												"nameLocation": "7361:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "7353:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7353:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7302:75:4"
									},
									"src": "7269:109:4"
								}
							],
							"scope": 353,
							"src": "1330:6050:4",
							"usedErrors": []
						}
					],
					"src": "36:7345:4"
				},
				"id": 4
			},
			"contracts/stateful/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/stateful/Staking.sol",
					"exportedSymbols": {
						"BondStatus": [
							470
						],
						"Coin": [
							142
						],
						"Commission": [
							393
						],
						"CommissionRates": [
							387
						],
						"Dec": [
							137
						],
						"DecCoin": [
							149
						],
						"MSG_CANCEL_UNDELEGATION": [
							380
						],
						"MSG_DELEGATE": [
							371
						],
						"MSG_REDELEGATE": [
							377
						],
						"MSG_UNDELEGATE": [
							374
						],
						"PageRequest": [
							465
						],
						"PageResponse": [
							154
						],
						"Redelegation": [
							430
						],
						"RedelegationEntry": [
							445
						],
						"RedelegationEntryResponse": [
							436
						],
						"RedelegationResponse": [
							425
						],
						"STAKING_CONTRACT": [
							367
						],
						"STAKING_PRECOMPILE_ADDRESS": [
							360
						],
						"StakingI": [
							653
						],
						"UnbondingDelegationEntry": [
							454
						],
						"Validator": [
							417
						],
						"authorization": [
							355
						]
					},
					"id": 654,
					"license": "LGPL-v3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 354,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:25:5"
						},
						{
							"absolutePath": "contracts/common/Authorization.sol",
							"file": "../common/Authorization.sol",
							"id": 355,
							"nameLocation": "103:13:5",
							"nodeType": "ImportDirective",
							"scope": 654,
							"sourceUnit": 85,
							"src": "63:54:5",
							"symbolAliases": [],
							"unitAlias": "authorization"
						},
						{
							"absolutePath": "contracts/common/Types.sol",
							"file": "../common/Types.sol",
							"id": 356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 654,
							"sourceUnit": 155,
							"src": "118:29:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"constant": true,
							"id": 360,
							"mutability": "constant",
							"name": "STAKING_PRECOMPILE_ADDRESS",
							"nameLocation": "208:26:5",
							"nodeType": "VariableDeclaration",
							"scope": 654,
							"src": "191:88:5",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 358,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "191:7:5",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030383030",
								"id": 359,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "237:42:5",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"value": "0x0000000000000000000000000000000000000800"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 367,
							"mutability": "constant",
							"name": "STAKING_CONTRACT",
							"nameLocation": "343:16:5",
							"nodeType": "VariableDeclaration",
							"scope": 654,
							"src": "325:73:5",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_StakingI_$653",
								"typeString": "contract StakingI"
							},
							"typeName": {
								"id": 363,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 362,
									"name": "StakingI",
									"nameLocations": [
										"325:8:5"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 653,
									"src": "325:8:5"
								},
								"referencedDeclaration": 653,
								"src": "325:8:5",
								"typeDescriptions": {
									"typeIdentifier": "t_contract$_StakingI_$653",
									"typeString": "contract StakingI"
								}
							},
							"value": {
								"arguments": [
									{
										"id": 365,
										"name": "STAKING_PRECOMPILE_ADDRESS",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 360,
										"src": "371:26:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 364,
									"name": "StakingI",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 653,
									"src": "362:8:5",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_contract$_StakingI_$653_$",
										"typeString": "type(contract StakingI)"
									}
								},
								"id": 366,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "362:36:5",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_contract$_StakingI_$653",
									"typeString": "contract StakingI"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 371,
							"mutability": "constant",
							"name": "MSG_DELEGATE",
							"nameLocation": "468:12:5",
							"nodeType": "VariableDeclaration",
							"scope": 654,
							"src": "452:68:5",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_string_memory_ptr",
								"typeString": "string"
							},
							"typeName": {
								"id": 369,
								"name": "string",
								"nodeType": "ElementaryTypeName",
								"src": "452:6:5",
								"typeDescriptions": {
									"typeIdentifier": "t_string_storage_ptr",
									"typeString": "string"
								}
							},
							"value": {
								"hexValue": "2f636f736d6f732e7374616b696e672e763162657461312e4d736744656c6567617465",
								"id": 370,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "483:37:5",
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_bf6973116593306cc0951019eb89d8793e3ad1184c238374870ee84cdf3b48f2",
									"typeString": "literal_string \"/cosmos.staking.v1beta1.MsgDelegate\""
								},
								"value": "/cosmos.staking.v1beta1.MsgDelegate"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 374,
							"mutability": "constant",
							"name": "MSG_UNDELEGATE",
							"nameLocation": "538:14:5",
							"nodeType": "VariableDeclaration",
							"scope": 654,
							"src": "522:72:5",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_string_memory_ptr",
								"typeString": "string"
							},
							"typeName": {
								"id": 372,
								"name": "string",
								"nodeType": "ElementaryTypeName",
								"src": "522:6:5",
								"typeDescriptions": {
									"typeIdentifier": "t_string_storage_ptr",
									"typeString": "string"
								}
							},
							"value": {
								"hexValue": "2f636f736d6f732e7374616b696e672e763162657461312e4d7367556e64656c6567617465",
								"id": 373,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "555:39:5",
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_7bec820b0e77f69a2a4cef6889125fb33e19db973c1ca85e0dd86c66e2473513",
									"typeString": "literal_string \"/cosmos.staking.v1beta1.MsgUndelegate\""
								},
								"value": "/cosmos.staking.v1beta1.MsgUndelegate"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 377,
							"mutability": "constant",
							"name": "MSG_REDELEGATE",
							"nameLocation": "612:14:5",
							"nodeType": "VariableDeclaration",
							"scope": 654,
							"src": "596:77:5",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_string_memory_ptr",
								"typeString": "string"
							},
							"typeName": {
								"id": 375,
								"name": "string",
								"nodeType": "ElementaryTypeName",
								"src": "596:6:5",
								"typeDescriptions": {
									"typeIdentifier": "t_string_storage_ptr",
									"typeString": "string"
								}
							},
							"value": {
								"hexValue": "2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c6567617465",
								"id": 376,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "629:44:5",
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_017e571b15ba8f3567be32b8c9b4c10b5aee7936471accdc36d1737426796a31",
									"typeString": "literal_string \"/cosmos.staking.v1beta1.MsgBeginRedelegate\""
								},
								"value": "/cosmos.staking.v1beta1.MsgBeginRedelegate"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 380,
							"mutability": "constant",
							"name": "MSG_CANCEL_UNDELEGATION",
							"nameLocation": "691:23:5",
							"nodeType": "VariableDeclaration",
							"scope": 654,
							"src": "675:96:5",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_string_memory_ptr",
								"typeString": "string"
							},
							"typeName": {
								"id": 378,
								"name": "string",
								"nodeType": "ElementaryTypeName",
								"src": "675:6:5",
								"typeDescriptions": {
									"typeIdentifier": "t_string_storage_ptr",
									"typeString": "string"
								}
							},
							"value": {
								"hexValue": "2f636f736d6f732e7374616b696e672e763162657461312e4d736743616e63656c556e626f6e64696e6744656c65676174696f6e",
								"id": 379,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "717:54:5",
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_e1cece22c3c2e8266c4849b858697c9d8fe37da1e4be1a557d17c5ce6597822d",
									"typeString": "literal_string \"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\""
								},
								"value": "/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation"
							},
							"visibility": "internal"
						},
						{
							"canonicalName": "CommissionRates",
							"id": 387,
							"members": [
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "898:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "890:12:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 381,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "890:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "maxRate",
									"nameLocation": "916:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "908:15:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 383,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "908:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 386,
									"mutability": "mutable",
									"name": "maxChangeRate",
									"nameLocation": "937:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "929:21:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 385,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "929:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "CommissionRates",
							"nameLocation": "868:15:5",
							"nodeType": "StructDefinition",
							"scope": 654,
							"src": "861:92:5",
							"visibility": "public"
						},
						{
							"canonicalName": "Commission",
							"id": 393,
							"members": [
								{
									"constant": false,
									"id": 390,
									"mutability": "mutable",
									"name": "commissionRates",
									"nameLocation": "1057:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 393,
									"src": "1041:31:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_CommissionRates_$387_storage_ptr",
										"typeString": "struct CommissionRates"
									},
									"typeName": {
										"id": 389,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 388,
											"name": "CommissionRates",
											"nameLocations": [
												"1041:15:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 387,
											"src": "1041:15:5"
										},
										"referencedDeclaration": 387,
										"src": "1041:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_CommissionRates_$387_storage_ptr",
											"typeString": "struct CommissionRates"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 392,
									"mutability": "mutable",
									"name": "updateTime",
									"nameLocation": "1086:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 393,
									"src": "1078:18:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 391,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1078:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Commission",
							"nameLocation": "1024:10:5",
							"nodeType": "StructDefinition",
							"scope": 654,
							"src": "1017:82:5",
							"visibility": "public"
						},
						{
							"canonicalName": "Validator",
							"id": 417,
							"members": [
								{
									"constant": false,
									"id": 395,
									"mutability": "mutable",
									"name": "operatorAddress",
									"nameLocation": "1187:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "1180:22:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 394,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1180:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 397,
									"mutability": "mutable",
									"name": "consensusPubkey",
									"nameLocation": "1215:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "1208:22:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 396,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1208:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 399,
									"mutability": "mutable",
									"name": "jailed",
									"nameLocation": "1241:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "1236:11:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 398,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1236:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 402,
									"mutability": "mutable",
									"name": "status",
									"nameLocation": "1264:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "1253:17:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_BondStatus_$470",
										"typeString": "enum BondStatus"
									},
									"typeName": {
										"id": 401,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 400,
											"name": "BondStatus",
											"nameLocations": [
												"1253:10:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 470,
											"src": "1253:10:5"
										},
										"referencedDeclaration": 470,
										"src": "1253:10:5",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_BondStatus_$470",
											"typeString": "enum BondStatus"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 404,
									"mutability": "mutable",
									"name": "tokens",
									"nameLocation": "1284:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "1276:14:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 403,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1276:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 406,
									"mutability": "mutable",
									"name": "delegatorShares",
									"nameLocation": "1304:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "1296:23:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 405,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1296:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 408,
									"mutability": "mutable",
									"name": "description",
									"nameLocation": "1332:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "1325:18:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 407,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1325:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 410,
									"mutability": "mutable",
									"name": "unbondingHeight",
									"nameLocation": "1355:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "1349:21:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int64",
										"typeString": "int64"
									},
									"typeName": {
										"id": 409,
										"name": "int64",
										"nodeType": "ElementaryTypeName",
										"src": "1349:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_int64",
											"typeString": "int64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 412,
									"mutability": "mutable",
									"name": "unbondingTime",
									"nameLocation": "1382:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "1376:19:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int64",
										"typeString": "int64"
									},
									"typeName": {
										"id": 411,
										"name": "int64",
										"nodeType": "ElementaryTypeName",
										"src": "1376:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_int64",
											"typeString": "int64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 414,
									"mutability": "mutable",
									"name": "commission",
									"nameLocation": "1409:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "1401:18:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 413,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1401:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 416,
									"mutability": "mutable",
									"name": "minSelfDelegation",
									"nameLocation": "1433:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "1425:25:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 415,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1425:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Validator",
							"nameLocation": "1164:9:5",
							"nodeType": "StructDefinition",
							"scope": 654,
							"src": "1157:296:5",
							"visibility": "public"
						},
						{
							"canonicalName": "RedelegationResponse",
							"id": 425,
							"members": [
								{
									"constant": false,
									"id": 420,
									"mutability": "mutable",
									"name": "redelegation",
									"nameLocation": "1502:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 425,
									"src": "1489:25:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Redelegation_$430_storage_ptr",
										"typeString": "struct Redelegation"
									},
									"typeName": {
										"id": 419,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 418,
											"name": "Redelegation",
											"nameLocations": [
												"1489:12:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 430,
											"src": "1489:12:5"
										},
										"referencedDeclaration": 430,
										"src": "1489:12:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Redelegation_$430_storage_ptr",
											"typeString": "struct Redelegation"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 424,
									"mutability": "mutable",
									"name": "entries",
									"nameLocation": "1548:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 425,
									"src": "1520:35:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_RedelegationEntryResponse_$436_storage_$dyn_storage_ptr",
										"typeString": "struct RedelegationEntryResponse[]"
									},
									"typeName": {
										"baseType": {
											"id": 422,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 421,
												"name": "RedelegationEntryResponse",
												"nameLocations": [
													"1520:25:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 436,
												"src": "1520:25:5"
											},
											"referencedDeclaration": 436,
											"src": "1520:25:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RedelegationEntryResponse_$436_storage_ptr",
												"typeString": "struct RedelegationEntryResponse"
											}
										},
										"id": 423,
										"nodeType": "ArrayTypeName",
										"src": "1520:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_RedelegationEntryResponse_$436_storage_$dyn_storage_ptr",
											"typeString": "struct RedelegationEntryResponse[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "RedelegationResponse",
							"nameLocation": "1462:20:5",
							"nodeType": "StructDefinition",
							"scope": 654,
							"src": "1455:103:5",
							"visibility": "public"
						},
						{
							"canonicalName": "Redelegation",
							"id": 430,
							"members": [
								{
									"constant": false,
									"id": 429,
									"mutability": "mutable",
									"name": "entries",
									"nameLocation": "1606:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 430,
									"src": "1586:27:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_RedelegationEntry_$445_storage_$dyn_storage_ptr",
										"typeString": "struct RedelegationEntry[]"
									},
									"typeName": {
										"baseType": {
											"id": 427,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 426,
												"name": "RedelegationEntry",
												"nameLocations": [
													"1586:17:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 445,
												"src": "1586:17:5"
											},
											"referencedDeclaration": 445,
											"src": "1586:17:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RedelegationEntry_$445_storage_ptr",
												"typeString": "struct RedelegationEntry"
											}
										},
										"id": 428,
										"nodeType": "ArrayTypeName",
										"src": "1586:19:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_RedelegationEntry_$445_storage_$dyn_storage_ptr",
											"typeString": "struct RedelegationEntry[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Redelegation",
							"nameLocation": "1567:12:5",
							"nodeType": "StructDefinition",
							"scope": 654,
							"src": "1560:56:5",
							"visibility": "public"
						},
						{
							"canonicalName": "RedelegationEntryResponse",
							"id": 436,
							"members": [
								{
									"constant": false,
									"id": 433,
									"mutability": "mutable",
									"name": "redelegationEntry",
									"nameLocation": "1675:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 436,
									"src": "1657:35:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_RedelegationEntry_$445_storage_ptr",
										"typeString": "struct RedelegationEntry"
									},
									"typeName": {
										"id": 432,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 431,
											"name": "RedelegationEntry",
											"nameLocations": [
												"1657:17:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 445,
											"src": "1657:17:5"
										},
										"referencedDeclaration": 445,
										"src": "1657:17:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_RedelegationEntry_$445_storage_ptr",
											"typeString": "struct RedelegationEntry"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 435,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "1706:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 436,
									"src": "1698:15:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 434,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1698:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "RedelegationEntryResponse",
							"nameLocation": "1625:25:5",
							"nodeType": "StructDefinition",
							"scope": 654,
							"src": "1618:98:5",
							"visibility": "public"
						},
						{
							"canonicalName": "RedelegationEntry",
							"id": 445,
							"members": [
								{
									"constant": false,
									"id": 438,
									"mutability": "mutable",
									"name": "creationHeight",
									"nameLocation": "1755:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "1749:20:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int64",
										"typeString": "int64"
									},
									"typeName": {
										"id": 437,
										"name": "int64",
										"nodeType": "ElementaryTypeName",
										"src": "1749:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_int64",
											"typeString": "int64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 440,
									"mutability": "mutable",
									"name": "completionTime",
									"nameLocation": "1781:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "1775:20:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int64",
										"typeString": "int64"
									},
									"typeName": {
										"id": 439,
										"name": "int64",
										"nodeType": "ElementaryTypeName",
										"src": "1775:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_int64",
											"typeString": "int64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 442,
									"mutability": "mutable",
									"name": "initialBalance",
									"nameLocation": "1809:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "1801:22:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 441,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1801:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 444,
									"mutability": "mutable",
									"name": "sharesDst",
									"nameLocation": "1837:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "1829:17:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 443,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1829:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "RedelegationEntry",
							"nameLocation": "1725:17:5",
							"nodeType": "StructDefinition",
							"scope": 654,
							"src": "1718:131:5",
							"visibility": "public"
						},
						{
							"canonicalName": "UnbondingDelegationEntry",
							"id": 454,
							"members": [
								{
									"constant": false,
									"id": 447,
									"mutability": "mutable",
									"name": "creationHeight",
									"nameLocation": "1895:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "1889:20:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int64",
										"typeString": "int64"
									},
									"typeName": {
										"id": 446,
										"name": "int64",
										"nodeType": "ElementaryTypeName",
										"src": "1889:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_int64",
											"typeString": "int64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 449,
									"mutability": "mutable",
									"name": "completionTime",
									"nameLocation": "1921:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "1915:20:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int64",
										"typeString": "int64"
									},
									"typeName": {
										"id": 448,
										"name": "int64",
										"nodeType": "ElementaryTypeName",
										"src": "1915:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_int64",
											"typeString": "int64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 451,
									"mutability": "mutable",
									"name": "initialBalance",
									"nameLocation": "1949:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "1941:22:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 450,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1941:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 453,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "1977:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "1969:15:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 452,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1969:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "UnbondingDelegationEntry",
							"nameLocation": "1858:24:5",
							"nodeType": "StructDefinition",
							"scope": 654,
							"src": "1851:136:5",
							"visibility": "public"
						},
						{
							"canonicalName": "PageRequest",
							"id": 465,
							"members": [
								{
									"constant": false,
									"id": 456,
									"mutability": "mutable",
									"name": "key",
									"nameLocation": "2020:3:5",
									"nodeType": "VariableDeclaration",
									"scope": 465,
									"src": "2014:9:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 455,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "2014:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 458,
									"mutability": "mutable",
									"name": "offset",
									"nameLocation": "2036:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 465,
									"src": "2029:13:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 457,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "2029:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 460,
									"mutability": "mutable",
									"name": "limit",
									"nameLocation": "2055:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 465,
									"src": "2048:12:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 459,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "2048:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 462,
									"mutability": "mutable",
									"name": "countTotal",
									"nameLocation": "2071:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 465,
									"src": "2066:15:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 461,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2066:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 464,
									"mutability": "mutable",
									"name": "reverse",
									"nameLocation": "2092:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 465,
									"src": "2087:12:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 463,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2087:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "PageRequest",
							"nameLocation": "1996:11:5",
							"nodeType": "StructDefinition",
							"scope": 654,
							"src": "1989:113:5",
							"visibility": "public"
						},
						{
							"canonicalName": "BondStatus",
							"id": 470,
							"members": [
								{
									"id": 466,
									"name": "Unspecified",
									"nameLocation": "2164:11:5",
									"nodeType": "EnumValue",
									"src": "2164:11:5"
								},
								{
									"id": 467,
									"name": "Unbonded",
									"nameLocation": "2181:8:5",
									"nodeType": "EnumValue",
									"src": "2181:8:5"
								},
								{
									"id": 468,
									"name": "Unbonding",
									"nameLocation": "2195:9:5",
									"nodeType": "EnumValue",
									"src": "2195:9:5"
								},
								{
									"id": 469,
									"name": "Bonded",
									"nameLocation": "2210:6:5",
									"nodeType": "EnumValue",
									"src": "2210:6:5"
								}
							],
							"name": "BondStatus",
							"nameLocation": "2147:10:5",
							"nodeType": "EnumDefinition",
							"src": "2142:76:5"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 472,
										"name": "authorization.AuthorizationI",
										"nameLocations": [
											"2571:13:5",
											"2585:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 84,
										"src": "2571:28:5"
									},
									"id": 473,
									"nodeType": "InheritanceSpecifier",
									"src": "2571:28:5"
								}
							],
							"canonicalName": "StakingI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "2220:329:5",
								"text": "@author Evmos Team\n @title Staking Precompiled Contract\n @dev The interface through which solidity contracts will interact with staking.\n We follow this same interface including four-byte function selectors, in the precompile that\n wraps the pallet.\n @custom:address 0x0000000000000000000000000000000000000800"
							},
							"fullyImplemented": false,
							"id": 653,
							"linearizedBaseContracts": [
								653,
								84
							],
							"name": "StakingI",
							"nameLocation": "2559:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "2606:295:5",
										"text": "@dev Defines a method for performing a delegation of coins from a delegator to a validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of the Coin to be delegated to the validator"
									},
									"functionSelector": "53266bbb",
									"id": 485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "2915:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "2941:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2933:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2933:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "2981:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2967:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2967:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3015:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "3007:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3007:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2923:104:5"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "completionTime",
												"nameLocation": "3052:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "3046:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 482,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3045:22:5"
									},
									"scope": 653,
									"src": "2906:162:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "3074:356:5",
										"text": "@dev Defines a method for performing an undelegation from a delegate and a validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount to be undelegated from the validator\n @return completionTime The time when the undelegation is completed"
									},
									"functionSelector": "3edab33c",
									"id": 497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "undelegate",
									"nameLocation": "3444:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "3472:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3464:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "3512:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3498:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 489,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3498:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3546:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3538:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3538:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:104:5"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "completionTime",
												"nameLocation": "3583:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3577:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 494,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "3577:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3576:22:5"
									},
									"scope": 653,
									"src": "3435:164:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "3605:519:5",
										"text": "@dev Defines a method for performing a redelegation\n of coins from a delegator and source validator to a destination validator.\n @param delegatorAddress The address of the delegator\n @param validatorSrcAddress The validator from which the redelegation is initiated\n @param validatorDstAddress The validator to which the redelegation is destined\n @param amount The amount to be redelegated to the validator\n @return completionTime The time when the redelegation is completed"
									},
									"functionSelector": "54b826f5",
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redelegate",
									"nameLocation": "4138:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "4166:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4158:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4158:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "validatorSrcAddress",
												"nameLocation": "4206:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4192:33:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 501,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4192:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "validatorDstAddress",
												"nameLocation": "4249:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4235:33:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 503,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4235:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4286:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4278:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4148:150:5"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "completionTime",
												"nameLocation": "4323:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4317:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 508,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "4317:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4316:22:5"
									},
									"scope": 653,
									"src": "4129:210:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "4345:465:5",
										"text": "@dev Allows delegators to cancel the unbondingDelegation entry\n and to delegate back to a previous validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of the Coin\n @param creationHeight The height at which the unbonding took place\n @return completionTime The time when the cancellation of the unbonding delegation is completed"
									},
									"functionSelector": "12d58dfe",
									"id": 525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelUnbondingDelegation",
									"nameLocation": "4824:25:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "4867:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "4859:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "4907:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "4893:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4893:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4941:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "4933:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4933:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "creationHeight",
												"nameLocation": "4965:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "4957:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4957:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4849:136:5"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "completionTime",
												"nameLocation": "5010:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "5004:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 522,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "5004:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5003:22:5"
									},
									"scope": 653,
									"src": "4815:211:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "5032:377:5",
										"text": "@dev Queries the given amount of the bond denomination to a validator.\n @param delegatorAddress The address of the delegator.\n @param validatorAddress The address of the validator.\n @return shares The amount of shares, that the delegator has received.\n @return balance The amount in Coin, that the delegator has delegated to the given validator."
									},
									"functionSelector": "241774e6",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegation",
									"nameLocation": "5423:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "5451:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5443:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5443:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "5491:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5477:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 529,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5477:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5433:80:5"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "5545:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5537:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5537:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5567:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5553:21:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Coin_$142_calldata_ptr",
													"typeString": "struct Coin"
												},
												"typeName": {
													"id": 535,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 534,
														"name": "Coin",
														"nameLocations": [
															"5553:4:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "5553:4:5"
													},
													"referencedDeclaration": 142,
													"src": "5553:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Coin_$142_storage_ptr",
														"typeString": "struct Coin"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5536:39:5"
									},
									"scope": 653,
									"src": "5414:162:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "5582:322:5",
										"text": "@dev Returns the delegation shares and coins, that are currently\n unbonding for a given delegator and validator pair.\n @param delegatorAddress The address of the delegator.\n @param validatorAddress The address of the validator.\n @return entries The delegations that are currently unbonding."
									},
									"functionSelector": "a03ffee1",
									"id": 550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unbondingDelegation",
									"nameLocation": "5918:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "5955:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5947:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5947:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "5995:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5981:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 542,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5981:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5937:80:5"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "entries",
												"nameLocation": "6077:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "6041:43:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UnbondingDelegationEntry_$454_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct UnbondingDelegationEntry[]"
												},
												"typeName": {
													"baseType": {
														"id": 546,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 545,
															"name": "UnbondingDelegationEntry",
															"nameLocations": [
																"6041:24:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 454,
															"src": "6041:24:5"
														},
														"referencedDeclaration": 454,
														"src": "6041:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UnbondingDelegationEntry_$454_storage_ptr",
															"typeString": "struct UnbondingDelegationEntry"
														}
													},
													"id": 547,
													"nodeType": "ArrayTypeName",
													"src": "6041:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UnbondingDelegationEntry_$454_storage_$dyn_storage_ptr",
														"typeString": "struct UnbondingDelegationEntry[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6040:45:5"
									},
									"scope": 653,
									"src": "5909:177:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "6092:203:5",
										"text": "@dev Queries validator info for a given validator address.\n @param validatorAddress The address of the validator.\n @return validators The validator info for the given validator address."
									},
									"functionSelector": "0bc82a17",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validator",
									"nameLocation": "6309:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "6342:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "6328:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6328:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6318:46:5"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "validators",
												"nameLocation": "6422:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "6401:31:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Validator_$417_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Validator[]"
												},
												"typeName": {
													"baseType": {
														"id": 556,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 555,
															"name": "Validator",
															"nameLocations": [
																"6401:9:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 417,
															"src": "6401:9:5"
														},
														"referencedDeclaration": 417,
														"src": "6401:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Validator_$417_storage_ptr",
															"typeString": "struct Validator"
														}
													},
													"id": 557,
													"nodeType": "ArrayTypeName",
													"src": "6401:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Validator_$417_storage_$dyn_storage_ptr",
														"typeString": "struct Validator[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6391:47:5"
									},
									"scope": 653,
									"src": "6300:139:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "6445:214:5",
										"text": "@dev Queries all validators that match the given status.\n @param status Enables to query for validators matching a given status.\n @param pageRequest Defines an optional pagination for the request."
									},
									"functionSelector": "186b2167",
									"id": 576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validators",
									"nameLocation": "6673:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "6707:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "6693:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 562,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6693:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "pageRequest",
												"nameLocation": "6744:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "6723:32:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PageRequest_$465_calldata_ptr",
													"typeString": "struct PageRequest"
												},
												"typeName": {
													"id": 565,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 564,
														"name": "PageRequest",
														"nameLocations": [
															"6723:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 465,
														"src": "6723:11:5"
													},
													"referencedDeclaration": 465,
													"src": "6723:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PageRequest_$465_storage_ptr",
														"typeString": "struct PageRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6683:78:5"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "validators",
												"nameLocation": "6815:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "6794:31:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Validator_$417_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Validator[]"
												},
												"typeName": {
													"baseType": {
														"id": 569,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 568,
															"name": "Validator",
															"nameLocations": [
																"6794:9:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 417,
															"src": "6794:9:5"
														},
														"referencedDeclaration": 417,
														"src": "6794:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Validator_$417_storage_ptr",
															"typeString": "struct Validator"
														}
													},
													"id": 570,
													"nodeType": "ArrayTypeName",
													"src": "6794:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Validator_$417_storage_$dyn_storage_ptr",
														"typeString": "struct Validator[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "pageResponse",
												"nameLocation": "6857:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "6835:34:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PageResponse_$154_calldata_ptr",
													"typeString": "struct PageResponse"
												},
												"typeName": {
													"id": 573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 572,
														"name": "PageResponse",
														"nameLocations": [
															"6835:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 154,
														"src": "6835:12:5"
													},
													"referencedDeclaration": 154,
													"src": "6835:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PageResponse_$154_storage_ptr",
														"typeString": "struct PageResponse"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6784:91:5"
									},
									"scope": 653,
									"src": "6664:212:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "6882:448:5",
										"text": "@dev Queries all redelegations from a source to a destination validator for a given delegator.\n @param delegatorAddress The address of the delegator.\n @param srcValidatorAddress Defines the validator address to redelegate from.\n @param dstValidatorAddress Defines the validator address to redelegate to.\n @return entries The active redelegations for the given delegator, source and destination validator combination."
									},
									"functionSelector": "7d9f939c",
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redelegation",
									"nameLocation": "7344:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "7374:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7366:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7366:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "srcValidatorAddress",
												"nameLocation": "7414:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7400:33:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 580,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7400:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "dstValidatorAddress",
												"nameLocation": "7457:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7443:33:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7443:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7356:126:5"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "entries",
												"nameLocation": "7535:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7506:36:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_RedelegationEntry_$445_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct RedelegationEntry[]"
												},
												"typeName": {
													"baseType": {
														"id": 586,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 585,
															"name": "RedelegationEntry",
															"nameLocations": [
																"7506:17:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 445,
															"src": "7506:17:5"
														},
														"referencedDeclaration": 445,
														"src": "7506:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RedelegationEntry_$445_storage_ptr",
															"typeString": "struct RedelegationEntry"
														}
													},
													"id": 587,
													"nodeType": "ArrayTypeName",
													"src": "7506:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RedelegationEntry_$445_storage_$dyn_storage_ptr",
														"typeString": "struct RedelegationEntry[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7505:38:5"
									},
									"scope": 653,
									"src": "7335:209:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "7550:567:5",
										"text": "@dev Queries all redelegations from a source to to a destination validator\n for a given delegator in a specified pagination manner.\n @param delegatorAddress The address of the delegator.\n @param srcValidatorAddress Defines the validator address to redelegate from.\n @param dstValidatorAddress Defines the validator address to redelegate to.\n @param pageRequest Defines an optional pagination for the request.\n @return response Holds the redelegations for the given delegator, source and destination validator combination."
									},
									"functionSelector": "10a2851c",
									"id": 606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redelegations",
									"nameLocation": "8131:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "8162:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "8154:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8154:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "srcValidatorAddress",
												"nameLocation": "8202:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "8188:33:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 594,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8188:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "dstValidatorAddress",
												"nameLocation": "8245:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "8231:33:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 596,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8231:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "pageRequest",
												"nameLocation": "8295:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "8274:32:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PageRequest_$465_calldata_ptr",
													"typeString": "struct PageRequest"
												},
												"typeName": {
													"id": 599,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 598,
														"name": "PageRequest",
														"nameLocations": [
															"8274:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 465,
														"src": "8274:11:5"
													},
													"referencedDeclaration": 465,
													"src": "8274:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PageRequest_$465_storage_ptr",
														"typeString": "struct PageRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8144:168:5"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "response",
												"nameLocation": "8366:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "8336:38:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RedelegationResponse_$425_calldata_ptr",
													"typeString": "struct RedelegationResponse"
												},
												"typeName": {
													"id": 603,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 602,
														"name": "RedelegationResponse",
														"nameLocations": [
															"8336:20:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 425,
														"src": "8336:20:5"
													},
													"referencedDeclaration": 425,
													"src": "8336:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RedelegationResponse_$425_storage_ptr",
														"typeString": "struct RedelegationResponse"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8335:40:5"
									},
									"scope": 653,
									"src": "8122:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "8382:388:5",
										"text": "@dev Delegate defines an Event emitted when a given amount of tokens are delegated from the\n delegator address to the validator address.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of Coin being delegated\n @param newShares The new delegation shares being held"
									},
									"eventSelector": "5a5adf903ba232ef17ed8be4ef872e1f60d17c5ba26a1ecbf44e388a672b118a",
									"id": 617,
									"name": "Delegate",
									"nameLocation": "8781:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "8815:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "8799:32:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8799:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"indexed": true,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "8856:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "8841:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8841:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8890:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "8882:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8882:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"indexed": false,
												"mutability": "mutable",
												"name": "newShares",
												"nameLocation": "8914:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "8906:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8906:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8789:140:5"
									},
									"src": "8775:155:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "8936:397:5",
										"text": "@dev Unbond defines an Event emitted when a given amount of tokens are unbonded from the\n validator address to the delegator address.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of Coin being unbonded\n @param completionTime The time at which the unbonding is completed"
									},
									"eventSelector": "1f6938077d62f3610504390aa8486c8172406456826a39907ca0cd40c8fe700a",
									"id": 628,
									"name": "Unbond",
									"nameLocation": "9344:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "9376:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "9360:32:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9360:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"indexed": true,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "9417:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "9402:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9402:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9451:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "9443:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9443:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"indexed": false,
												"mutability": "mutable",
												"name": "completionTime",
												"nameLocation": "9475:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "9467:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9467:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9350:145:5"
									},
									"src": "9338:158:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "9502:571:5",
										"text": "@dev Redelegate defines an Event emitted when a given amount of tokens are redelegated from\n the source validator address to the destination validator address.\n @param delegatorAddress The address of the delegator\n @param validatorSrcAddress The address of the validator from which the delegation is retracted\n @param validatorDstAddress The address of the validator to which the delegation is directed\n @param amount The amount of Coin being redelegated\n @param completionTime The time at which the redelegation is completed"
									},
									"eventSelector": "43c8e32499593a7da63d4aec64367350a850199e23d2ce6a6e067365938d1bb6",
									"id": 641,
									"name": "Redelegate",
									"nameLocation": "10084:10:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "10120:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "10104:32:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10104:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"indexed": true,
												"mutability": "mutable",
												"name": "validatorSrcAddress",
												"nameLocation": "10161:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "10146:34:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 632,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10146:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"indexed": true,
												"mutability": "mutable",
												"name": "validatorDstAddress",
												"nameLocation": "10205:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "10190:34:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 634,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10190:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10242:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "10234:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"indexed": false,
												"mutability": "mutable",
												"name": "completionTime",
												"nameLocation": "10266:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "10258:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10258:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10094:192:5"
									},
									"src": "10078:209:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "10293:501:5",
										"text": "@dev CancelUnbondingDelegation defines an Event emitted when a given amount of tokens\n that are in the process of unbonding from the validator address are bonded again.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of Coin that was in the unbonding process which is to be cancelled\n @param creationHeight The block height at which the unbonding of a delegation was initiated"
									},
									"eventSelector": "4df30dbaa29da95e67f93ec6d865329c7e7e870b3939583df3c8889319c89126",
									"id": 652,
									"name": "CancelUnbondingDelegation",
									"nameLocation": "10805:25:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "10856:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "10840:32:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10840:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"indexed": true,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "10897:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "10882:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 645,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10882:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10931:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "10923:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10923:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"indexed": false,
												"mutability": "mutable",
												"name": "creationHeight",
												"nameLocation": "10955:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "10947:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10947:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10830:145:5"
									},
									"src": "10799:177:5"
								}
							],
							"scope": 654,
							"src": "2549:8429:5",
							"usedErrors": []
						}
					],
					"src": "36:10943:5"
				},
				"id": 5
			}
		}
	}
}